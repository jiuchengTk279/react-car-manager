[{"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\index.js":"1","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\reportWebVitals.js":"2","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\App.js":"3","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\admin.js":"4","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\components\\Header\\index.js":"5","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\components\\Footer\\index.js":"6","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\components\\NavLeft\\index.js":"7","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\config\\menuConfig.js":"8","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\utils\\utils.js":"9","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\axios\\index.js":"10","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\home\\index.js":"11","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\router.js":"12","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\login\\index.js":"13","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\buttons.js":"14","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\nomatch\\index.js":"15","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\modals.js":"16","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\loading.js":"17","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\notice.js":"18","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\message.js":"19","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\tabs.js":"20","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\gallery.js":"21","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\carousel.js":"22","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\form\\login.js":"23","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\form\\register.js":"24","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\table\\basicTable.js":"25","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\table\\highTable.js":"26","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\city\\index.js":"27","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\order\\index.js":"28","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\components\\BaseForm\\index.js":"29","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\common.js":"30","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\order\\detail.js":"31","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\user\\index.js":"32","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\components\\ETable\\index.js":"33","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\map\\bikeMap.js":"34","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\echarts\\bar\\index.js":"35","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\echarts\\pie\\index.js":"36","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\echarts\\line\\index.js":"37","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\echarts\\echartTheme.js":"38","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\echarts\\themeLight.js":"39","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\rich\\index.js":"40","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\permission\\index.js":"41","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\redux\\store\\configureStore.js":"42","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\redux\\reducer\\index.js":"43","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\redux\\action\\index.js":"44"},{"size":707,"mtime":1612695985371,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"46"},{"size":384,"mtime":1612538566720,"results":"48","hashOfConfig":"46"},{"size":754,"mtime":1612539379751,"results":"49","hashOfConfig":"46"},{"size":2103,"mtime":1612623332493,"results":"50","hashOfConfig":"46"},{"size":301,"mtime":1612530625792,"results":"51","hashOfConfig":"46"},{"size":1117,"mtime":1612539506508,"results":"52","hashOfConfig":"46"},{"size":2596,"mtime":1528698544000,"results":"53","hashOfConfig":"46"},{"size":2566,"mtime":1612528568334,"results":"54","hashOfConfig":"46"},{"size":1832,"mtime":1612607158991,"results":"55","hashOfConfig":"46"},{"size":247,"mtime":1612531129891,"results":"56","hashOfConfig":"46"},{"size":3603,"mtime":1612695042914,"results":"57","hashOfConfig":"46"},{"size":180,"mtime":1612538805031,"results":"58","hashOfConfig":"46"},{"size":2766,"mtime":1612583980579,"results":"59","hashOfConfig":"46"},{"size":237,"mtime":1612539748520,"results":"60","hashOfConfig":"46"},{"size":3286,"mtime":1612585750774,"results":"61","hashOfConfig":"46"},{"size":1689,"mtime":1612587605844,"results":"62","hashOfConfig":"46"},{"size":1476,"mtime":1612588111165,"results":"63","hashOfConfig":"46"},{"size":838,"mtime":1612595285158,"results":"64","hashOfConfig":"46"},{"size":2928,"mtime":1612597052857,"results":"65","hashOfConfig":"46"},{"size":1676,"mtime":1612597839853,"results":"66","hashOfConfig":"46"},{"size":1024,"mtime":1612598407841,"results":"67","hashOfConfig":"46"},{"size":2575,"mtime":1612604156569,"results":"68","hashOfConfig":"46"},{"size":2320,"mtime":1612604183404,"results":"69","hashOfConfig":"46"},{"size":6341,"mtime":1612607344397,"results":"70","hashOfConfig":"46"},{"size":11890,"mtime":1612608398736,"results":"71","hashOfConfig":"46"},{"size":7478,"mtime":1612618126628,"results":"72","hashOfConfig":"46"},{"size":6548,"mtime":1612619894044,"results":"73","hashOfConfig":"46"},{"size":3971,"mtime":1612622534321,"results":"74","hashOfConfig":"46"},{"size":451,"mtime":1612620345200,"results":"75","hashOfConfig":"46"},{"size":5707,"mtime":1612621960737,"results":"76","hashOfConfig":"46"},{"size":8973,"mtime":1612624987899,"results":"77","hashOfConfig":"46"},{"size":4820,"mtime":1612624019190,"results":"78","hashOfConfig":"46"},{"size":4837,"mtime":1612625745730,"results":"79","hashOfConfig":"46"},{"size":3621,"mtime":1612691284384,"results":"80","hashOfConfig":"46"},{"size":7431,"mtime":1612691514444,"results":"81","hashOfConfig":"46"},{"size":4882,"mtime":1612691752855,"results":"82","hashOfConfig":"46"},{"size":4742,"mtime":1528696938000,"results":"83","hashOfConfig":"46"},{"size":3896,"mtime":1528696938000,"results":"84","hashOfConfig":"46"},{"size":1706,"mtime":1612692354770,"results":"85","hashOfConfig":"46"},{"size":12734,"mtime":1612694085061,"results":"86","hashOfConfig":"46"},{"size":457,"mtime":1612695754529,"results":"87","hashOfConfig":"46"},{"size":397,"mtime":1612695692007,"results":"88","hashOfConfig":"46"},{"size":241,"mtime":1612695675569,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1159ftc",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"94"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"94"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\index.js",[],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\reportWebVitals.js",[],["205","206"],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\App.js",[],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\admin.js",["207"],"import { Col, Row } from 'antd'\r\nimport React, { Component } from 'react'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport NavLeft from './components/NavLeft'\r\nimport Home from './pages/home'\r\nimport './style/common.less'\r\nexport default class Admin extends Component {\r\n  \r\n  render () {\r\n    return (\r\n      <Row className=\"container\">\r\n        <Col span=\"4\" className=\"nav-left\">\r\n          <NavLeft></NavLeft>\r\n        </Col>\r\n        <Col span=\"20\" className=\"main\">\r\n          <Header>Header</Header>\r\n          <Row className=\"content\">\r\n            {/* <Home></Home> */}\r\n            {this.props.children}\r\n          </Row>\r\n          <Footer>Footer</Footer>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\components\\Header\\index.js",["208","209"],"import React, { Component } from 'react'\r\nimport { Row, Col } from 'antd'\r\nimport './index.less'\r\nimport Util from '../../utils/utils'\r\nimport axios from '../../axios'\r\nexport default class Header extends Component {\r\n  state = {}\r\n  componentWillMount () {\r\n    this.setState({\r\n      userName: '张三'\r\n    })\r\n    setInterval(() => {\r\n      let sysTime = Util.formateDate(new Date().getTime())\r\n      this.setState({\r\n        sysTime\r\n      })\r\n    }, 1000)\r\n    this.getWeatherAPIData()\r\n  }\r\n\r\n  getWeatherAPIData () {\r\n    let city = '北京';\r\n    axios.jsonp({\r\n        url:'http://api.map.baidu.com/telematics/v3/weather?location='+encodeURIComponent(city)+'&output=json&ak=IOXimfoqOUVq2KcYCiQU9cMF7hyN5kFB'\r\n    }).then((res)=>{\r\n        if(res.status == 'success'){\r\n            let data = res.results[0].weather_data[0];\r\n            this.setState({\r\n                // dayPictureUrl:data.dayPictureUrl,\r\n                // weather:data.weather\r\n                dayPictureUrl: '',\r\n                weather: '晴转多云'\r\n            })\r\n        }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"header\">\r\n        {/* <Row className=\"header-top\">\r\n          {\r\n            <Col span=\"6\" className=\"logo\">\r\n              <img src=\"/assets/logo-ant.svg\" alt=\"\" />\r\n              <span>Car MS</span>\r\n            </Col> \r\n          }\r\n          <Col span=\"18\" >\r\n            <span>欢迎，{this.state.userName}</span>\r\n            <a href=\"#\">退出</a>\r\n          </Col>\r\n        </Row> */}\r\n          <Row className=\"breadcrumb\">\r\n            <Col span=\"4\" className=\"breadcrumb-title\">\r\n              首页\r\n            </Col>\r\n            <Col span=\"20\" className=\"weather\">\r\n              <span className=\"date\">{this.state.sysTime}</span>\r\n              <span className=\"weather-img\">\r\n                <img src={this.state.dayPictureUrl} alt=\"晴转多云\"></img>\r\n              </span>\r\n              <span className=\"weather-detail\">\r\n                {this.state.weather}\r\n              </span>\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\components\\Footer\\index.js",[],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\components\\NavLeft\\index.js",["210"],"import React, { Component } from 'react'\r\nimport { Menu, Icon } from 'antd'\r\nimport { NavLink } from 'react-router-dom'\r\nimport MenuConfig from './../../config/menuConfig'\r\nimport './index.less'\r\nconst { SubMenu } = Menu\r\nexport default class NavLeft extends Component {\r\n  \r\n  componentWillMount () {\r\n    const menuTreeNode = this.renderMenu(MenuConfig)\r\n    this.setState({\r\n      menuTreeNode\r\n    })\r\n  }\r\n\r\n  // 菜单渲染\r\n  renderMenu = (data) => {\r\n    return data.map((item) => {\r\n      if (item.children) {\r\n        return (\r\n          <SubMenu title={item.title} key={item.key}>\r\n            { this.renderMenu(item.children) }\r\n          </SubMenu>\r\n        )\r\n      }\r\n      return <Menu.Item title={item.title} key={item.key}>\r\n        <NavLink to={item.key}>{item.title}</NavLink>\r\n      </Menu.Item>\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"logo\">\r\n          <img src=\"/assets/logo-ant.svg\" alt=\"\"/>\r\n          <h1>Car MS</h1>\r\n        </div>\r\n        <Menu theme=\"dark\">\r\n          { this.state.menuTreeNode }\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\config\\menuConfig.js",[],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\utils\\utils.js",["211","212"],"import React from 'react';\r\nimport { Select } from 'antd'\r\nconst Option = Select.Option;\r\nexport default {\r\n    formateDate(time){\r\n        if(!time)return '';\r\n        let date = new Date(time);\r\n        return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()+' '+date.getHours()+':'+date.getMinutes()+':'+date.getSeconds();\r\n    },\r\n    pagination(data,callback){\r\n        return {\r\n            onChange:(current)=>{\r\n                callback(current)\r\n            },\r\n            current:data.result.page,\r\n            pageSize:data.result.page_size,\r\n            total: data.result.total_count,\r\n            showTotal:()=>{\r\n                return `共${data.result.total_count}条`\r\n            },\r\n            showQuickJumper:true\r\n        }\r\n    },\r\n    // 格式化金额,单位:分(eg:430分=4.30元)\r\n    formatFee(fee, suffix = '') {\r\n        if (!fee) {\r\n            return 0;\r\n        }\r\n        return Number(fee).toFixed(2) + suffix;\r\n    },\r\n    // 格式化公里（eg:3000 = 3公里）\r\n    formatMileage(mileage, text) {\r\n        if (!mileage) {\r\n            return 0;\r\n        }\r\n        if (mileage >= 1000) {\r\n            text = text || \" km\";\r\n            return Math.floor(mileage / 100) / 10 + text;\r\n        } else {\r\n            text = text || \" m\";\r\n            return mileage + text;\r\n        }\r\n    },\r\n    // 隐藏手机号中间4位\r\n    formatPhone(phone) {\r\n        phone += '';\r\n        return phone.replace(/(\\d{3})\\d*(\\d{4})/g, '$1***$2')\r\n    },\r\n    // 隐藏身份证号中11位\r\n    formatIdentity(number) {\r\n        number += '';\r\n        return number.replace(/(\\d{3})\\d*(\\d{4})/g, '$1***********$2')\r\n    },\r\n    getOptionList(data){\r\n        if(!data){\r\n            return [];\r\n        }\r\n        let options = [] //[<Option value=\"0\" key=\"all_key\">全部</Option>];\r\n        data.map((item)=>{\r\n            options.push(<Option value={item.id} key={item.id}>{item.name}</Option>)\r\n        })\r\n        return options;\r\n    },\r\n    /**\r\n     * ETable 行点击通用函数\r\n     * @param {*选中行的索引} selectedRowKeys\r\n     * @param {*选中行对象} selectedItem\r\n     */\r\n    updateSelectedItem(selectedRowKeys, selectedRows, selectedIds) {\r\n        if (selectedIds) {\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedIds: selectedIds,\r\n                selectedItem: selectedRows\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedItem: selectedRows\r\n            })\r\n        }\r\n    },\r\n}","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\axios\\index.js",["213","214","215"],"import JsonP from 'jsonp'\nimport axios from 'axios'\nimport { Modal } from 'antd'\nexport default class Axios {\n    static jsonp(options) {\n        return new Promise((resolve, reject) => {\n            JsonP(options.url, {\n                param: 'callback'\n            }, function (err, response) {\n                if (response.status == 'success') {\n                    resolve(response);\n                } else {\n                    reject(response.messsage);\n                }\n            })\n        })\n    }\n\n    static ajax(options){\n        let loading;\n        if (options.data && options.data.isShowLoading !== false){\n            loading = document.getElementById('ajaxLoading');\n            // loading.style.display = 'block';\n        }\n        let baseApi = 'https://www.easy-mock.com/mock/5a7278e28d0c633b9c4adbd7/api';\n        return new Promise((resolve,reject)=>{\n            axios({\n                url:options.url,\n                method:'get',\n                baseURL:baseApi,\n                timeout:5000,\n                params: (options.data && options.data.params) || ''\n            }).then((response)=>{\n                if (options.data && options.data.isShowLoading !== false) {\n                    loading = document.getElementById('ajaxLoading');\n                    loading.style.display = 'none';\n                }\n                if (response.status == '200'){\n                    let res = response.data;\n                    if (res.code == '0'){\n                        resolve(res);\n                    }else{\n                        Modal.info({\n                            title:\"提示\",\n                            content:res.msg\n                        })\n                    }\n                }else{\n                    reject(response.data);\n                }\n            })\n        });\n    }\n}","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\home\\index.js",[],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\router.js",[],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\login\\index.js",[],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\buttons.js",[],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\nomatch\\index.js",[],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\modals.js",["216"],"import React, { Component } from 'react'\r\nimport { Card, Button, Radio, Modal } from 'antd'\r\nimport './ui.less'\r\n\r\nexport default class Modals extends Component {\r\n  \r\n  state = {\r\n    showModal1: false,\r\n    showModal2: false,\r\n    showModal3: false,\r\n    showModal4: false\r\n  }\r\n\r\n  handleOpen = (type) => {\r\n    this.setState({\r\n      [type]: true\r\n    })\r\n  }\r\n\r\n  handleConfirm = (type) => {\r\n    Modal[type]({\r\n      title: '确认？',\r\n      content: 'React Hook?',\r\n      onOk  () {\r\n        console.log('ok')\r\n      },\r\n      onCancel () {\r\n        console.log('cancel')\r\n      }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Card title=\"基础模态框\" className=\"card-wrap\">\r\n          <Button type=\"primary\" onClick={() =>this.handleOpen('showModal1')}>Open</Button>\r\n          <Button type=\"primary\" onClick={() =>this.handleOpen('showModal2')}>自定义页脚</Button>\r\n          <Button type=\"primary\" onClick={() =>this.handleOpen('showModal3')}>顶部20px弹框</Button>\r\n          <Button type=\"primary\" onClick={() =>this.handleOpen('showModal4')}>水平垂直居中</Button>\r\n        </Card>\r\n        <Card title=\"信息确认框\" className=\"card-wrap\">\r\n          <Button type=\"primary\" onClick={() => this.handleConfirm('confirm')}>Confirm</Button>\r\n          <Button type=\"primary\" onClick={() => this.handleConfirm('info')}>Info</Button>\r\n          <Button type=\"primary\" onClick={() => this.handleConfirm('success')}>Success</Button>\r\n          <Button type=\"primary\" onClick={() => this.handleConfirm('warning')}>Warning</Button>\r\n        </Card>\r\n        <Modal\r\n          title=\"React\"\r\n          visible={this.state.showModal1}\r\n          onOk={() => {\r\n            this.setState({\r\n              showModal1: false\r\n            })\r\n          }}\r\n          onCancel={() => {\r\n            this.setState({\r\n              showModal1: false\r\n            })\r\n          }}>\r\n            <p>React 后台管理</p>\r\n        </Modal>\r\n        <Modal\r\n          title=\"React\"\r\n          visible={this.state.showModal2}\r\n          okText=\"好的\"\r\n          cancelText=\"取消\"\r\n          onOk={() => {\r\n            this.setState({\r\n              showModal2: false\r\n            })\r\n          }}\r\n          onCancel={() => {\r\n            this.setState({\r\n              showModal2: false\r\n            })\r\n          }}>\r\n            <p>React 后台管理</p>\r\n        </Modal>\r\n        <Modal\r\n          title=\"React\"\r\n          visible={this.state.showModal3}\r\n          style={{ top: 20 }}\r\n          onOk={() => {\r\n            this.setState({\r\n              showModal3: false\r\n            })\r\n          }}\r\n          onCancel={() => {\r\n            this.setState({\r\n              showModal3: false\r\n            })\r\n          }}>\r\n            <p>React 后台管理</p>\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"React\"\r\n          visible={this.state.showModal4}\r\n          wrapClassName=\"vertical-center-modal\"\r\n          onOk={() => {\r\n            this.setState({\r\n              showModal4: false\r\n            })\r\n          }}\r\n          onCancel={() => {\r\n            this.setState({\r\n              showModal4: false\r\n            })\r\n          }}>\r\n            <p>React 后台管理</p>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\loading.js",["217","218"],"import React, { Component } from 'react'\r\nimport { Card, Button, Spin, Icon, Alert } from 'antd'\r\nimport { LoadingOutlined  } from '@ant-design/icons'\r\nimport './ui.less'\r\n\r\nexport default class Loadings extends Component {\r\n\r\n  render () {\r\n    const icon = <LoadingOutlined  type=\"loading\" style={{fontSize:24}}/>\r\n    const iconLoading = <LoadingOutlined type=\"loading\" style={{ fontSize: 24 }} />\r\n    return (\r\n      <div>\r\n        <Card title=\"Spin用法\" className=\"card-wrap\">\r\n          <Spin size=\"small\"></Spin>\r\n          <Spin style={{margin:'0 10px'}}/>\r\n          <Spin size=\"large\"/>\r\n          <Spin indicator={icon} style={{ marginLeft: 10 }} spinning={true}/>\r\n        </Card>\r\n        <Card title=\"内容遮罩\" className=\"card-wrap\">\r\n          <Alert\r\n            message=\"React\"\r\n            description=\"欢迎\"\r\n            type=\"info\"\r\n            style={{ marginBottom: 10 }}\r\n          >\r\n          </Alert>\r\n          <Spin>\r\n            <Alert\r\n              message=\"React\"\r\n              description=\"欢迎\"\r\n              type=\"warning\"\r\n              style={{ marginBottom: 10 }}\r\n            >\r\n            </Alert>\r\n          </Spin>\r\n          <Spin tip=\"加载中...\">\r\n            <Alert\r\n              message=\"React\"\r\n              description=\"欢迎\"\r\n              type=\"warning\"\r\n              style={{ marginBottom: 10 }}\r\n            >\r\n            </Alert>\r\n          </Spin>\r\n          <Spin indicator={iconLoading}>\r\n            <Alert\r\n              message=\"React\"\r\n              description=\"欢迎\"\r\n              type=\"warning\"\r\n            >\r\n            </Alert>\r\n          </Spin>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\notice.js",["219"],"import React, { Component } from 'react'\r\nimport { Card, Button, Radio, notification } from 'antd'\r\nimport './ui.less'\r\n\r\nexport default class Notice extends Component {\r\n  \r\n  openNotification = (type, direction) => {\r\n    if (direction) {\r\n      notification.config({\r\n        placement: direction\r\n      })\r\n    }\r\n\r\n    notification[type]({\r\n      message: 'React',\r\n      description: 'React 后台系统'\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Card title=\"通知提醒框\" className=\"card-wrap\">\r\n          <Button type=\"primary\" onClick={()=>this.openNotification('success')}>Success</Button>\r\n          <Button type=\"primary\" onClick={()=>this.openNotification('info')}>Info</Button>\r\n          <Button type=\"primary\" onClick={()=>this.openNotification('warning')}>Warning</Button>\r\n          <Button type=\"primary\" onClick={()=>this.openNotification('error')}>Error</Button>\r\n        </Card>\r\n        <Card title=\"通知提醒框\" className=\"card-wrap\">\r\n          <Button type=\"primary\" onClick={() => this.openNotification('success','topLeft')}>Success</Button>\r\n          <Button type=\"primary\" onClick={() => this.openNotification('info','topRight')}>Info</Button>\r\n          <Button type=\"primary\" onClick={() => this.openNotification('warning','bottomLeft')}>Warning</Button>\r\n          <Button type=\"primary\" onClick={() => this.openNotification('error','bottomRight')}>Error</Button>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\message.js",[],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\tabs.js",["220","221","222"],"import React, { Component } from 'react'\r\nimport { Card, Button, Tabs, Icon, message } from 'antd'\r\nimport { LoadingOutlined, AppleOutlined  } from '@ant-design/icons'\r\nimport './ui.less'\r\nconst { TabPane } = Tabs\r\n\r\nexport default class ITabs extends Component {\r\n  newTabIndex = 0\r\n\r\n  handleCallback = (key) => {\r\n    message.info('选择标签：'+key)\r\n  }\r\n\r\n  componentWillMount () {\r\n    const panes = [\r\n      {\r\n          title:'Tab 1',\r\n          content: 'Tab 1',\r\n          key:'1'\r\n      },\r\n      {\r\n          title: 'Tab 2',\r\n          content: 'Tab 2',\r\n          key: '2'\r\n      },\r\n      {\r\n          title: 'Tab 3',\r\n          content: 'Tab 3',\r\n          key: '3'\r\n      }\r\n    ]\r\n    this.setState({\r\n      activeKey: panes[0].key,\r\n      panes\r\n    })\r\n  }\r\n\r\n  onChange = (activeKey) => {\r\n    this.setState({\r\n      activeKey\r\n    })\r\n  }\r\n\r\n  onEdit = (targetKey, action) => {\r\n    this[action](targetKey)\r\n  }\r\n\r\n  add = () => {\r\n    const { panes } = this.state;\r\n    const activeKey = `newTab${this.newTabIndex++}`;\r\n    panes.push({ title: 'New Tab', content: 'New Tab Pane', key: activeKey });\r\n    this.setState({ panes, activeKey });\r\n  }\r\n\r\n  remove = targetKey => {\r\n    let { activeKey } = this.state;\r\n    let lastIndex;\r\n    this.state.panes.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n    if (panes.length && activeKey === targetKey) {\r\n      if (lastIndex >= 0) {\r\n        activeKey = panes[lastIndex].key;\r\n      } else {\r\n        activeKey = panes[0].key;\r\n      }\r\n    }\r\n    this.setState({ panes, activeKey });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Card title=\"Tab页签\" className=\"card-wrap\">\r\n          <Tabs defaultActiveKey=\"1\" onChange={this.handleCallback}>\r\n            <TabPane tab=\"Tab1\" key=\"1\">React</TabPane>\r\n            <TabPane tab=\"Tab2\" key=\"2\">Vue</TabPane>\r\n            <TabPane tab=\"Tab3\" key=\"3\">Python</TabPane>\r\n          </Tabs>\r\n        </Card>\r\n        <Card title=\"Tab带图的页签\" className=\"card-wrap\">\r\n          <Tabs defaultActiveKey=\"1\" onChange={this.handleCallback}>\r\n            <TabPane tab={<span><AppleOutlined/>Tab1</span>} key=\"1\">React</TabPane>\r\n            <TabPane tab={<span><AppleOutlined/>Tab2</span>} key=\"2\">Vue</TabPane>\r\n            <TabPane tab={<span><AppleOutlined/>Tab3</span>} key=\"3\">Python</TabPane>\r\n          </Tabs>\r\n        </Card>\r\n        <Card title=\"Tab带图的页签\" className=\"card-wrap\">\r\n          <Tabs activeKey={this.state.activeKey} onChange={this.onChange} onEdit={this.onEdit} type=\"editable-card\">\r\n            {\r\n              this.state.panes.map((panel) => {\r\n                return <TabPane tab={panel.title} key={panel.key}></TabPane>\r\n              })\r\n            }\r\n          </Tabs>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\gallery.js",["223","224","225"],"import React, { Component } from 'react'\r\nimport { Card, Button, Row, Col, Modal } from 'antd'\r\nimport './ui.less'\r\n\r\nexport default class Gallery extends Component {\r\n  \r\n  state = {\r\n    visible: false\r\n  }\r\n\r\n  openGallery = (imgSrc) => {\r\n    this.setState({\r\n      visible: true,\r\n      currentImg: '/gallery/'+imgSrc\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const imgs = [\r\n      ['1.png', '2.png', '3.png', '4.png', '5.png'],\r\n      ['6.png', '7.png', '8.png', '9.png', '10.png'],\r\n      ['11.png', '12.png', '13.png', '14.png', '15.png'],\r\n      ['16.png', '17.png', '18.png', '19.png', '20.png'],\r\n      ['21.png', '22.png', '23.png', '24.png', '25.png']\r\n    ]\r\n    const imgList = imgs.map((list) => list.map((item) => {\r\n      <Card\r\n        style={{marginBottom:10}}\r\n        cover={<img src={'/gallery/'+item} onClick={()=>this.openGallery(item)}/>}\r\n      >\r\n        <Card.Meta title=\"React\" description=\"React Hook\"/>\r\n      </Card>\r\n    }))\r\n    return (\r\n      <div className=\"card-wrap\">\r\n        <Row gutter={10}>\r\n          <Col md={5}>{imgList[0]}</Col>\r\n          <Col md={5}>{imgList[1]}</Col>\r\n          <Col md={5}>{imgList[2]}</Col>\r\n          <Col md={5}>{imgList[3]}</Col>\r\n          <Col md={4}>{imgList[4]}</Col>\r\n        </Row>\r\n        <Modal\r\n          width={300}\r\n          height={500}\r\n          visible={this.state.visible}\r\n          title=\"图片画廊\"\r\n          onCancel={()=>{\r\n              this.setState({\r\n                  visible:false\r\n              })\r\n          }}\r\n          footer={null}\r\n        >\r\n          {<img src={this.state.currentImg} alt=\"\" style={{width:'100%'}}/>}\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\ui\\carousel.js",[],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\form\\login.js",["226","227","228","229"],"import React, { Component, useForm } from 'react'\r\nimport { Card, Form, Input, Button, message, Icon, Checkbox } from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item\r\n\r\nexport default class FormLogin extends Component {\r\n  \r\n  handleSubmit = () => {\r\n    // const [form] = Form.useForm()\r\n    // let userInfo = this.props.form.getFieldsValue()\r\n    // form.validateFields((err, values) => {\r\n    //   if (!err) {\r\n    //     message.success(`${userInfo.userName}，恭喜通过表单验证`)\r\n    //   }\r\n    // })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Card title=\"登录行内表单\">\r\n          <Form layout=\"inline\">\r\n            <FormItem>\r\n              <Input placeholder=\"请输入用户名\"/>\r\n            </FormItem>\r\n            <FormItem>\r\n              <Input placeholder=\"请输入密码\" />\r\n            </FormItem>\r\n            <FormItem>\r\n              <Button type=\"primary\">登录</Button>\r\n            </FormItem>\r\n          </Form>\r\n        </Card>\r\n        <Card title=\"登录水平表单\" style={{marginTop:10}}>\r\n          <Form style={{width:300}}>\r\n            <FormItem name=\"userName\" initialValues=\" \" rules={[\r\n              {\r\n                required: true,\r\n                message: '用户名不能为空'\r\n              },\r\n              {\r\n                min:4,max:10,\r\n                message:'长度不在范围内'\r\n              },\r\n              {\r\n                pattern:new RegExp('^\\\\w+$','g'),\r\n                message:'用户名必须为字母或者数字'\r\n              }\r\n            ]}>\r\n              <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"请输入用户名\"/>\r\n            </FormItem>\r\n            <FormItem name=\"password\" initialValue=\"\" rules={[\r\n              {\r\n                required: true,\r\n                message: '密码不能为空'\r\n              }\r\n            ]}>\r\n              <Input type=\"password\" prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"请输入密码\" />\r\n            </FormItem>\r\n            <FormItem>\r\n              <FormItem name=\"remember\" valuePropName=\"checked\" initialValue=\"\">\r\n                <Checkbox>记住密码</Checkbox>\r\n              </FormItem>\r\n              <a href=\"#\" style={{float:'right'}}>忘记密码</a>\r\n            </FormItem>\r\n            <FormItem>\r\n              <Button type=\"primary\" onClick={this.handleSubmit}>登录</Button>\r\n            </FormItem>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\form\\register.js",["230","231","232","233","234","235","236","237","238","239","240","241","242"],"import React, { Component } from 'react'\r\nimport {Card,Form,Button,Input,Checkbox,Radio,Select,Switch,DatePicker,TimePicker,Upload,Icon,message, InputNumber} from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item;\r\nconst RadioGroup = Radio.Group;\r\nconst Option = Select.Option;\r\nconst TextArea = Input.TextArea;\r\n\r\nexport default class FormRegister extends Component {\r\n\r\n  render () {\r\n\r\n    const formItemLayout = {\r\n      labelCol:{\r\n        xs:24,\r\n        sm:4\r\n      },\r\n      wrapperCol:{\r\n        xs:24,\r\n        sm:12\r\n      }\r\n    }\r\n    const offsetLayout = {\r\n        wrapperCol:{\r\n          xs:24,\r\n          sm:{\r\n              span:12,\r\n              offset:4\r\n          }\r\n        }\r\n    }\r\n    const rowObject = {\r\n      minRows: 4, maxRows: 6\r\n    }\r\n    return (\r\n      <div>\r\n        <Card title=\"注册表单\">\r\n          <Form layout=\"horizontal\">\r\n            <FormItem name=\"userName\" {...formItemLayout} initialValues=\" \" rules={[\r\n                {\r\n                  required: true,\r\n                  message: '用户名不能为空'\r\n                },\r\n                {\r\n                  min:4,max:10,\r\n                  message:'长度不在范围内'\r\n                },\r\n                {\r\n                  pattern:new RegExp('^\\\\w+$','g'),\r\n                  message:'用户名必须为字母或者数字'\r\n                }\r\n              ]}>\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"请输入用户名\"/>\r\n              </FormItem>\r\n              <FormItem name=\"password\" type=\"password\" initialValue=\"\" {...formItemLayout} rules={[\r\n                {\r\n                  required: true,\r\n                  message: '密码不能为空'\r\n                },\r\n              ]}>\r\n                <Input type=\"password\" prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"请输入密码\" />\r\n              </FormItem>\r\n              <FormItem name=\"sex\" label=\"性别\"  initialValue=\"1\" {...formItemLayout}>\r\n                <RadioGroup>\r\n                  <Radio value=\"1\">男</Radio>\r\n                  <Radio value=\"2\">女</Radio>\r\n                </RadioGroup>\r\n              </FormItem>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\table\\basicTable.js",["243","244","245","246"],"import React, { Component } from 'react'\r\nimport { Card, Table, Modal, Button, message} from 'antd';\r\nimport axios from './../../axios/index'\r\nimport Utils from './../../utils/utils'\r\n\r\nexport default class BasicTable extends Component {\r\n  \r\n  state = {\r\n    dataSource2: []\r\n  }\r\n\r\n  params = {\r\n    page: 1\r\n  }\r\n\r\n  componentDidMount () {\r\n    const data = [\r\n      {\r\n          id:'0',\r\n          userName:'Jack',\r\n          sex:'1',\r\n          state:'1',\r\n          interest:'1',\r\n          birthday:'2000-01-01',\r\n          address:'北京市海淀区奥林匹克公园',\r\n          time:'09:00'\r\n      },\r\n      {\r\n          id: '1',\r\n          userName: 'Tom',\r\n          sex: '1',\r\n          state: '1',\r\n          interest: '1',\r\n          birthday: '2000-01-01',\r\n          address: '北京市海淀区奥林匹克公园',\r\n          time: '09:00'\r\n      },\r\n      {\r\n          id: '2',\r\n          userName: 'Lily',\r\n          sex: '1',\r\n          state: '1',\r\n          interest: '1',\r\n          birthday: '2000-01-01',\r\n          address: '北京市海淀区奥林匹克公园',\r\n          time: '09:00'\r\n      },\r\n    ]\r\n    data.map((item,index) => {\r\n      item.key = index\r\n    })\r\n    this.setState({\r\n      dataSource: data\r\n    })\r\n    this.request()\r\n  }\r\n\r\n  request = () => {\r\n    let _this = this\r\n    axios.ajax({\r\n      url: '/table/list',\r\n      data: {\r\n        params: {\r\n          page: this.params.page\r\n        }\r\n      }\r\n    }).then((res) => {\r\n      if (res.code === 0) {\r\n        res.result.list.map((item, index) => {\r\n          item.key = index\r\n        })\r\n        this.setState({\r\n          dataSource2:res.result.list,\r\n          selectedRowKeys:[],\r\n          selectedRows:null,\r\n          pagination: Utils.pagination(res,(current)=>{\r\n              _this.params.page = current;\r\n              this.request();\r\n          })\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  onRowClick = (record,index) => {\r\n    let selectKey = [index];\r\n    Modal.info({\r\n        title:'信息',\r\n        content:`用户名：${record.userName},用户爱好：${record.interest}`\r\n    })\r\n    this.setState({\r\n        selectedRowKeys:selectKey,\r\n        selectedItem: record\r\n    })\r\n  }\r\n\r\n  handleDelete = (() => {\r\n    let rows = this.state.selectedRows;\r\n      let ids = [];\r\n      rows.map((item)=>{\r\n          ids.push(item.id)\r\n      })\r\n      Modal.confirm({\r\n          title:'删除提示',\r\n          content: `您确定要删除这些数据吗？${ids.join(',')}`,\r\n          onOk:()=>{\r\n              message.success('删除成功');\r\n              this.request();\r\n          }\r\n      })\r\n  })\r\n\r\n\r\n  render () {\r\n\r\n    const columns = [\r\n      {\r\n          title:'id',\r\n          key:'id',\r\n          dataIndex:'id'\r\n      },\r\n      {\r\n          title: '用户名',\r\n          key: 'userName',\r\n          dataIndex: 'userName'\r\n      },\r\n      {\r\n          title: '性别',\r\n          key: 'sex',\r\n          dataIndex: 'sex',\r\n          render(sex){\r\n              return sex ==1 ?'男':'女'\r\n          }\r\n      },\r\n      {\r\n          title: '状态',\r\n          key: 'state',\r\n          dataIndex: 'state',\r\n          render(state){\r\n              let config  = {\r\n                  '1':'咸鱼一条',\r\n                  '2':'风华浪子',\r\n                  '3':'北大才子',\r\n                  '4':'百度FE',\r\n                  '5':'创业者'\r\n              }\r\n              return config[state];\r\n          }\r\n      },\r\n      {\r\n          title: '爱好',\r\n          key: 'interest',\r\n          dataIndex: 'interest',\r\n          render(abc) {\r\n              let config = {\r\n                  '1': '游泳',\r\n                  '2': '打篮球',\r\n                  '3': '踢足球',\r\n                  '4': '跑步',\r\n                  '5': '爬山',\r\n                  '6': '骑行',\r\n                  '7': '桌球',\r\n                  '8': '麦霸'\r\n              }\r\n              return config[abc];\r\n          }\r\n      },\r\n      {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          dataIndex: 'birthday'\r\n      },\r\n      {\r\n          title: '地址',\r\n          key: 'address',\r\n          dataIndex: 'address'\r\n      },\r\n      {\r\n          title: '早起时间',\r\n          key: 'time',\r\n          dataIndex: 'time'\r\n      }\r\n    ]\r\n    const selectedRowKeys = this.state.selectedRowKeys;\r\n    const rowSelection = {\r\n        type:'radio',\r\n        selectedRowKeys\r\n    }\r\n    const rowCheckSelection = {\r\n        type: 'checkbox',\r\n        selectedRowKeys,\r\n        onChange:(selectedRowKeys,selectedRows)=>{\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedRows\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Card title=\"基础表格\">\r\n          <Table columns={columns} dataSource={this.state.dataSource} pagination={false} bordered></Table>\r\n        </Card>\r\n        <Card title=\"动态数据渲染表格-Mock\" style={{margin:'10px 0'}}>\r\n          <Table columns={columns} dataSource={this.state.dataSource2} bordered pagination={false}></Table>\r\n        </Card>\r\n        <Card title=\"Mock-单选\" style={{ margin: '10px 0' }}>\r\n          <Table\r\n            bordered\r\n            rowSelection={rowSelection}\r\n            onRow={(record,index) => {\r\n                return {\r\n                    onClick:()=>{\r\n                        this.onRowClick(record,index);\r\n                    }\r\n                };\r\n            }}\r\n            columns={columns}\r\n            dataSource={this.state.dataSource2}\r\n            pagination={false}\r\n          />\r\n        </Card>\r\n        <Card title=\"Mock-单选\" style={{ margin: '10px 0' }}>\r\n          <div style={{marginBottom:10}}>\r\n              <Button onClick={this.handleDelete}>删除</Button>\r\n          </div>\r\n          <Table\r\n              bordered\r\n              rowSelection={rowCheckSelection}\r\n              columns={columns}\r\n              dataSource={this.state.dataSource2}\r\n              pagination={false}\r\n          />\r\n        </Card>\r\n        <Card title=\"Mock-表格分页\" style={{ margin: '10px 0' }}>\r\n          <Table\r\n              bordered\r\n              columns={columns}\r\n              dataSource={this.state.dataSource2}\r\n              pagination={this.state.pagination}\r\n          />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\table\\highTable.js",["247","248","249","250","251","252","253","254","255"],"import React, { Component } from 'react'\r\nimport { Card, Table, Modal, Button, message, Badge } from 'antd';\r\nimport axios from './../../axios/index'\r\nimport Utils from './../../utils/utils';\r\n\r\nexport default class HighTable extends Component {\r\n  \r\n  state = {}\r\n\r\n  params = {\r\n    page: 1\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.request()\r\n  }\r\n\r\n  // 动态获取mock数据\r\n  request = () => {\r\n    let _this = this;\r\n    axios.ajax({\r\n        url: '/table/high/list',\r\n        data: {\r\n            params: {\r\n                page: this.params.page\r\n            }\r\n        }\r\n    }).then((res) => {\r\n        if (res.code == 0) {\r\n            res.result.list.map((item, index) => {\r\n                item.key = index;\r\n            })\r\n            this.setState({\r\n                dataSource: res.result.list\r\n            })\r\n        }\r\n    })\r\n  }\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    this.setState({\r\n      sortOrder: sorter.order\r\n    })\r\n  }\r\n\r\n  handleDelete = (item) => {\r\n    let id = item.id\r\n    Modal.confirm({\r\n      title: '确认',\r\n      content: '您确认要删除此条数据吗？',\r\n      onOk: () => {\r\n        message.success('删除成功')\r\n        this.request()\r\n      },\r\n      onCancel: () => {\r\n        message.info('已取消删除')\r\n        this.request()\r\n      }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const columns = [\r\n      {\r\n          title: 'id',\r\n          key: 'id',\r\n          width:80,\r\n          dataIndex: 'id'\r\n      },\r\n      {\r\n          title: '用户名',\r\n          key: 'userName',\r\n          width: 80,\r\n          dataIndex: 'userName'\r\n      },\r\n      {\r\n          title: '性别',\r\n          key: 'sex',\r\n          width: 80,\r\n          dataIndex: 'sex',\r\n          render(sex) {\r\n              return sex == 1 ? '男' : '女'\r\n          }\r\n      },\r\n      {\r\n          title: '状态',\r\n          key: 'state',\r\n          width: 80,\r\n          dataIndex: 'state',\r\n          render(state) {\r\n              let config = {\r\n                  '1': '咸鱼一条',\r\n                  '2': '风华浪子',\r\n                  '3': '北大才子',\r\n                  '4': '百度FE',\r\n                  '5': '创业者'\r\n              }\r\n              return config[state];\r\n          }\r\n      },\r\n      {\r\n          title: '爱好',\r\n          key: 'interest',\r\n          width: 80,\r\n          dataIndex: 'interest',\r\n          render(abc) {\r\n              let config = {\r\n                  '1': '游泳',\r\n                  '2': '打篮球',\r\n                  '3': '踢足球',\r\n                  '4': '跑步',\r\n                  '5': '爬山',\r\n                  '6': '骑行',\r\n                  '7': '桌球',\r\n                  '8': '麦霸'\r\n              }\r\n              return config[abc];\r\n          }\r\n      },\r\n      {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      },\r\n      {\r\n          title: '地址',\r\n          key: 'address',\r\n          width: 120,\r\n          dataIndex: 'address'\r\n      },\r\n      {\r\n          title: '早起时间',\r\n          key: 'time',\r\n          width: 80,\r\n          dataIndex: 'time'\r\n      }\r\n    ]\r\n\r\n    const columns2 = [\r\n      {\r\n          title: 'id',\r\n          key: 'id',\r\n          width: 80,\r\n          fixed:'left',\r\n          dataIndex: 'id'\r\n      },\r\n      {\r\n          title: '用户名',\r\n          key: 'userName',\r\n          width: 80,\r\n          fixed: 'left',\r\n          dataIndex: 'userName'\r\n      },\r\n      {\r\n          title: '性别',\r\n          key: 'sex',\r\n          width: 80,\r\n          dataIndex: 'sex',\r\n          render(sex) {\r\n              return sex == 1 ? '男' : '女'\r\n          }\r\n      },\r\n      {\r\n          title: '状态',\r\n          key: 'state',\r\n          width: 80,\r\n          dataIndex: 'state',\r\n          render(state) {\r\n              let config = {\r\n                  '1': '咸鱼一条',\r\n                  '2': '风华浪子',\r\n                  '3': '北大才子',\r\n                  '4': '百度FE',\r\n                  '5': '创业者'\r\n              }\r\n              return config[state];\r\n          }\r\n      },\r\n      {\r\n          title: '爱好',\r\n          key: 'interest',\r\n          width: 80,\r\n          dataIndex: 'interest',\r\n          render(abc) {\r\n              let config = {\r\n                  '1': '游泳',\r\n                  '2': '打篮球',\r\n                  '3': '踢足球',\r\n                  '4': '跑步',\r\n                  '5': '爬山',\r\n                  '6': '骑行',\r\n                  '7': '桌球',\r\n                  '8': '麦霸'\r\n              }\r\n              return config[abc];\r\n          }\r\n      },\r\n      {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      },\r\n      {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      }, {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          width: 120,\r\n          dataIndex: 'birthday'\r\n      },\r\n      {\r\n          title: '地址',\r\n          key: 'address',\r\n          width: 120,\r\n          fixed: 'right',\r\n          dataIndex: 'address'\r\n      },\r\n      {\r\n          title: '早起时间',\r\n          key: 'time',\r\n          width: 80,\r\n          fixed: 'right',\r\n          dataIndex: 'time'\r\n      }\r\n    ]\r\n\r\n    const columns3 = [\r\n      {\r\n          title: 'id',\r\n          key: 'id',\r\n          dataIndex: 'id'\r\n      },\r\n      {\r\n          title: '用户名',\r\n          key: 'userName',\r\n          dataIndex: 'userName'\r\n      },\r\n      {\r\n          title: '性别',\r\n          key: 'sex',\r\n          dataIndex: 'sex',\r\n          render(sex) {\r\n              return sex == 1 ? '男' : '女'\r\n          }\r\n      },\r\n      {\r\n          title: '年龄',\r\n          key: 'age',\r\n          dataIndex: 'age',\r\n          sorter:(a,b)=>{\r\n              return a.age - b.age;\r\n          },\r\n          sortOrder:this.state.sortOrder\r\n      },\r\n      {\r\n          title: '状态',\r\n          key: 'state',\r\n          dataIndex: 'state',\r\n          render(state) {\r\n              let config = {\r\n                  '1': '咸鱼一条',\r\n                  '2': '风华浪子',\r\n                  '3': '北大才子',\r\n                  '4': '百度FE',\r\n                  '5': '创业者'\r\n              }\r\n              return config[state];\r\n          }\r\n      },\r\n      {\r\n          title: '爱好',\r\n          key: 'interest',\r\n          dataIndex: 'interest',\r\n          render(abc) {\r\n              let config = {\r\n                  '1': '游泳',\r\n                  '2': '打篮球',\r\n                  '3': '踢足球',\r\n                  '4': '跑步',\r\n                  '5': '爬山',\r\n                  '6': '骑行',\r\n                  '7': '桌球',\r\n                  '8': '麦霸'\r\n              }\r\n              return config[abc];\r\n          }\r\n      },\r\n      {\r\n          title: '生日',\r\n          key: 'birthday',\r\n          dataIndex: 'birthday'\r\n      },\r\n      {\r\n          title: '地址',\r\n          key: 'address',\r\n          dataIndex: 'address'\r\n      },\r\n      {\r\n          title: '早起时间',\r\n          key: 'time',\r\n          dataIndex: 'time'\r\n      }\r\n    ]\r\n\r\n    const columns4 = [\r\n      {\r\n          title: 'id',\r\n          dataIndex: 'id'\r\n      },\r\n      {\r\n          title: '用户名',\r\n          dataIndex: 'userName'\r\n      },\r\n      {\r\n          title: '性别',\r\n          dataIndex: 'sex',\r\n          render(sex) {\r\n              return sex == 1 ? '男' : '女'\r\n          }\r\n      },\r\n      {\r\n          title: '年龄',\r\n          dataIndex: 'age'\r\n      },\r\n      {\r\n          title: '状态',\r\n          dataIndex: 'state',\r\n          render(state) {\r\n              let config = {\r\n                  '1': '咸鱼一条',\r\n                  '2': '风华浪子',\r\n                  '3': '北大才子',\r\n                  '4': '百度FE',\r\n                  '5': '创业者'\r\n              }\r\n              return config[state];\r\n          }\r\n      },\r\n      {\r\n          title: '爱好',\r\n          dataIndex: 'interest',\r\n          render(abc) {\r\n              let config = {\r\n                  '1': <Badge status=\"success\" text=\"成功\"/>,\r\n                  '2': <Badge status=\"error\" text=\"报错\" />,\r\n                  '3': <Badge status=\"default\" text=\"正常\" />,\r\n                  '4': <Badge status=\"processing\" text=\"进行中\" />,\r\n                  '5': <Badge status=\"warning\" text=\"警告\" />\r\n              }\r\n              return config[abc];\r\n          }\r\n      },\r\n      {\r\n          title: '生日',\r\n          dataIndex: 'birthday'\r\n      },\r\n      {\r\n          title: '地址',\r\n          dataIndex: 'address'\r\n      },\r\n      {\r\n          title: '操作',\r\n          render:(text,item)=>{\r\n              return <Button size=\"small\" onClick={(item) => { this.handleDelete(item) }}>删除</Button>\r\n          }\r\n      }\r\n    ]\r\n\r\n    return (\r\n      <div>\r\n        <Card title=\"头部固定\">\r\n          <Table\r\n              bordered\r\n              columns={columns}\r\n              dataSource={this.state.dataSource}\r\n              pagination={false}\r\n              scroll={{y:240}}\r\n          />\r\n        </Card>\r\n        <Card title=\"左侧固定\" style={{ margin: '10px 0' }}>\r\n          <Table\r\n              bordered\r\n              columns={columns2}\r\n              dataSource={this.state.dataSource}\r\n              pagination={false}\r\n              scroll={{ x: 2650 }}\r\n          />\r\n        </Card>\r\n        <Card title=\"表格排序\" style={{ margin: '10px 0' }}>\r\n          <Table\r\n              bordered\r\n              columns={columns3}\r\n              dataSource={this.state.dataSource}\r\n              pagination={false}\r\n              onChange={this.handleChange}\r\n          />\r\n        </Card>\r\n        <Card title=\"操作按钮\" style={{ margin: '10px 0' }}>\r\n          <Table\r\n              bordered\r\n              columns={columns4}\r\n              dataSource={this.state.dataSource}\r\n              pagination={false}\r\n          />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\city\\index.js",["256","257","258"],"import React, { Component } from 'react'\r\nimport { Card, Button, Table, Form, Select, Modal, message } from 'antd';\r\nimport axios from './../../axios/index';\r\nimport Utils from './../../utils/utils';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nexport default class City extends Component {\r\n  \r\n  state = {\r\n    list: [],\r\n    isShowOpenCity:false\r\n  }\r\n\r\n  params = {\r\n    page: 1\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.requestList()\r\n  }\r\n\r\n  // 默认请求我们的接口数据\r\n  requestList = ()=>{\r\n    let _this = this;\r\n    axios.ajax({\r\n        url: '/open_city',\r\n        data:{\r\n            params:{\r\n                page:this.params.page\r\n            }\r\n        }\r\n    }).then((res)=>{\r\n        let list = res.result.item_list.map((item, index) => {\r\n            item.key = index;\r\n            return item;\r\n        });\r\n        this.setState({\r\n            list:list,\r\n            pagination:Utils.pagination(res,(current)=>{\r\n                _this.params.page = current;\r\n                _this.requestList();\r\n            })\r\n        })\r\n    })\r\n  }\r\n\r\n  // 开通城市\r\n  handleOpenCity = () => {\r\n    this.setState({\r\n      isShowOpenCity: true\r\n    })\r\n  }\r\n\r\n  // 城市开通提交\r\n  handleSubmit = () => {\r\n    let cityInfo = this.cityForm.props.form.getFieldsValue();\r\n    console.log(cityInfo);\r\n    axios.ajax({\r\n        url:'/city/open',\r\n        data:{\r\n            params:cityInfo\r\n        }\r\n    }).then((res)=>{\r\n        if(res.code == '0'){\r\n            message.success('开通成功');\r\n            this.setState({\r\n                isShowOpenCity:false\r\n            })\r\n            this.requestList();\r\n        }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const columns = [\r\n      {\r\n          title:'城市ID',\r\n          dataIndex:'id'\r\n      }, {\r\n          title: '城市名称',\r\n          dataIndex: 'name'\r\n      }, {\r\n          title: '用车模式',\r\n          dataIndex: 'mode',\r\n          render(mode){\r\n              return mode ==1 ?'停车点':'禁停区';\r\n          }\r\n      }, {\r\n          title: '营运模式',\r\n          dataIndex: 'op_mode',\r\n          render(op_mode) {\r\n              return op_mode == 1 ? '自营' : '加盟';\r\n          }\r\n      }, {\r\n          title: '授权加盟商',\r\n          dataIndex: 'franchisee_name'\r\n      }, {\r\n          title: '城市管理员',\r\n          dataIndex: 'city_admins',\r\n          render(arr){\r\n              return arr.map((item)=>{\r\n                  return item.user_name;\r\n              }).join(',');\r\n          }\r\n      }, {\r\n          title: '城市开通时间',\r\n          dataIndex: 'open_time'\r\n      }, {\r\n          title: '操作时间',\r\n          dataIndex: 'update_time',\r\n          render: Utils.formateDate\r\n      }, {\r\n          title: '操作人',\r\n          dataIndex: 'sys_user_name'\r\n      }\r\n    ]\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <FilterForm />\r\n        </Card>\r\n        <Card style={{marginTop:10}}>\r\n          <Button type=\"primary\" onClick={this.handleOpenCity}>开通城市</Button>\r\n        </Card>\r\n        <div className=\"content-wrap\">\r\n          <Table bordered columns={columns} dataSource={this.state.list} pagination={this.state.pagination}></Table>\r\n        </div>\r\n        <Modal title=\"开通城市\" visible={this.state.isShowOpenCity} onCancel={() => {\r\n          this.setState({\r\n            isShowOpenCity: false\r\n          })}}\r\n          onOk={this.handleSubmit}>\r\n            <OpenCityForm wrappedComponentRef={(inst)=>{this.cityForm = inst;}}/>\r\n          </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass FilterForm extends Component {\r\n  \r\n  render () {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form layout=\"inline\">\r\n        <FormItem label=\"城市\">\r\n          {\r\n            getFieldDecorator('city_id')(\r\n              <Select\r\n                  style={{width:100}}\r\n                  placeholder=\"全部\"\r\n              >\r\n                  <Option value=\"\">全部</Option>\r\n                  <Option value=\"1\">北京市</Option>\r\n                  <Option value=\"2\">天津市</Option>\r\n                  <Option value=\"3\">深圳市</Option>\r\n              </Select>\r\n            )\r\n          }\r\n        </FormItem>\r\n        <FormItem label=\"用车模式\">\r\n          {\r\n            getFieldDecorator('mode')(\r\n              <Select\r\n                  style={{ width: 120 }}\r\n                  placeholder=\"全部\"\r\n              >\r\n                  <Option value=\"\">全部</Option>\r\n                  <Option value=\"1\">指定停车点模式</Option>\r\n                  <Option value=\"2\">禁停区模式</Option>\r\n              </Select>\r\n            )\r\n          }\r\n        </FormItem>\r\n        <FormItem label=\"营运模式\">\r\n          {\r\n            getFieldDecorator('op_mode')(\r\n              <Select\r\n                  style={{ width: 80 }}\r\n                  placeholder=\"全部\"\r\n              >\r\n                  <Option value=\"\">全部</Option>\r\n                  <Option value=\"1\">自营</Option>\r\n                  <Option value=\"2\">加盟</Option>\r\n              </Select>\r\n            )\r\n          }\r\n        </FormItem>\r\n        <FormItem label=\"加盟商授权状态\">\r\n          {\r\n            getFieldDecorator('auth_status')(\r\n              <Select\r\n                  style={{ width: 100 }}\r\n                  placeholder=\"全部\"\r\n              >\r\n                  <Option value=\"\">全部</Option>\r\n                  <Option value=\"1\">已授权</Option>\r\n                  <Option value=\"2\">未授权</Option>\r\n              </Select>\r\n            )\r\n          }\r\n        </FormItem>\r\n        <FormItem>\r\n          <Button type=\"primary\" style={{margin:'0 20px'}}>查询</Button>\r\n          <Button>重置</Button>\r\n        </FormItem>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\nFilterForm = Form.create({})(FilterForm)\r\n\r\n\r\nclass OpenCityForm extends Component {\r\n  render () {\r\n    const formItemLayout = {\r\n      labelCol:{\r\n          span:5\r\n      },\r\n      wrapperCol:{\r\n          span:19\r\n      }\r\n    }\r\n    const { getFieldDecorator }  =this.props.form;\r\n    return (\r\n      <Form layout=\"horizontal\">\r\n        <FormItem label=\"选择城市\" {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('city_id',{\r\n              initialValue:'1'\r\n            })(\r\n              <Select style={{ width: 100 }}>\r\n                  <Option value=\"\">全部</Option>\r\n                  <Option value=\"1\">北京市</Option>\r\n                  <Option value=\"2\">天津市</Option>\r\n              </Select>\r\n            )\r\n          }\r\n        </FormItem>\r\n        <FormItem label=\"营运模式\" {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('op_mode', {\r\n              initialValue: '1'\r\n            })(\r\n              <Select style={{ width: 100 }}>\r\n                  <Option value=\"1\">自营</Option>\r\n                  <Option value=\"2\">加盟</Option>\r\n              </Select>\r\n            )\r\n          }\r\n        </FormItem>\r\n        <FormItem label=\"用车模式\" {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('use_mode', {\r\n              initialValue: '1'\r\n            })(\r\n              <Select style={{ width: 100 }}>\r\n                  <Option value=\"1\">指定停车点</Option>\r\n                  <Option value=\"2\">禁停区</Option>\r\n              </Select>\r\n            )\r\n          }\r\n        </FormItem>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nOpenCityForm = Form.create({})(OpenCityForm);","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\order\\index.js",["259","260","261","262"],"import React, { Component } from 'react'\r\nimport { Card, Button, Table, Form, Select, Modal, DatePicker, message} from 'antd'\r\nimport axios from '../../axios'\r\nimport Utils from '../../utils/utils'\r\nimport BaseForm from '../../components/BaseForm'\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nexport default class Order extends Component {\r\n  \r\n  state = {\r\n    orderInfo:{},\r\n    orderConfirmVisble:false\r\n  }\r\n\r\n  params = {\r\n    page: 1\r\n  }\r\n\r\n  formList = [\r\n    {\r\n        type:'SELECT',\r\n        label:'城市',\r\n        field:'city',\r\n        placeholder:'全部',\r\n        initialValue:'1',\r\n        width:80,\r\n        list: [{ id: '0', name: '全部' }, { id: '1', name: '北京' }, { id: '2', name: '天津' }, { id: '3', name: '上海' }]\r\n    },\r\n    {\r\n        type: '时间查询'\r\n    },\r\n    {\r\n        type: 'SELECT',\r\n        label: '订单状态',\r\n        field:'order_status',\r\n        placeholder: '全部',\r\n        initialValue: '1',\r\n        width: 80,\r\n        list: [{ id: '0', name: '全部' }, { id: '1', name: '进行中' }, { id: '2', name: '结束行程' }]\r\n    }\r\n  ]\r\n\r\n  componentDidMount () {\r\n    this.requestList()\r\n  }\r\n\r\n  handleFilter = (params)=>{\r\n    this.params = params;\r\n    this.requestList();\r\n  }\r\n\r\n  requestList = ()=>{\r\n    let _this = this;\r\n    axios.ajax({\r\n        url:'/order/list',\r\n        data:{\r\n            params: this.params\r\n        }\r\n    }).then((res)=>{\r\n        let list = res.result.item_list.map((item, index) => {\r\n            item.key = index;\r\n            return item;\r\n        });\r\n        this.setState({\r\n            list,\r\n            pagination: Utils.pagination(res, (current) => {\r\n                _this.params.page = current;\r\n                _this.requestList();\r\n            })\r\n        })\r\n    })\r\n  }\r\n\r\n  // 订单结束确认\r\n  handleConfirm = ()=>{\r\n    let item = this.state.selectedItem;\r\n    if (!item) {\r\n        Modal.info({\r\n            title: '信息',\r\n            content: '请选择一条订单进行结束'\r\n        })\r\n        return;\r\n    }\r\n    axios.ajax({\r\n        url:'/order/ebike_info',\r\n        data:{\r\n            params:{\r\n                orderId: item.id\r\n            }\r\n        }\r\n    }).then((res)=>{\r\n        if(res.code ==0 ){\r\n            this.setState({\r\n                orderInfo:res.result,\r\n                orderConfirmVisble: true\r\n            })\r\n        }\r\n    })\r\n  }\r\n\r\n\r\n  // 结束订单\r\n  handleFinishOrder = ()=>{\r\n    let item = this.state.selectedItem;\r\n    axios.ajax({\r\n        url: '/order/finish_order',\r\n        data: {\r\n            params: {\r\n                orderId: item.id\r\n            }\r\n        }\r\n    }).then((res) => {\r\n        if (res.code == 0) {\r\n            message.success('订单结束成功')\r\n            this.setState({\r\n                orderConfirmVisble: false\r\n            })\r\n            this.requestList();\r\n        }\r\n    })\r\n  }\r\n\r\n  onRowClick = (record, index) => {\r\n    let selectKey = [index];\r\n    this.setState({\r\n        selectedRowKeys: selectKey,\r\n        selectedItem: record\r\n    })\r\n  }\r\n\r\n  openOrderDetail = ()=>{\r\n    let item = this.state.selectedItem;\r\n    if (!item) {\r\n        Modal.info({\r\n            title: '信息',\r\n            content: '请先选择一条订单'\r\n        })\r\n        return;\r\n    }\r\n    window.open(`/#/common/order/detail/${item.id}`,'_blank')\r\n  }\r\n\r\n  render () {\r\n\r\n    const columns = [\r\n      {\r\n          title:'订单编号',\r\n          dataIndex:'order_sn'\r\n      },\r\n      {\r\n          title: '车辆编号',\r\n          dataIndex: 'bike_sn'\r\n      },\r\n      {\r\n          title: '用户名',\r\n          dataIndex: 'user_name'\r\n      },\r\n      {\r\n          title: '手机号',\r\n          dataIndex: 'mobile'\r\n      },\r\n      {\r\n          title: '里程',\r\n          dataIndex: 'distance',\r\n          render(distance){\r\n              return distance/1000 + 'Km';\r\n          }\r\n      },\r\n      {\r\n          title: '行驶时长',\r\n          dataIndex: 'total_time'\r\n      },\r\n      {\r\n          title: '状态',\r\n          dataIndex: 'status'\r\n      },\r\n      {\r\n          title: '开始时间',\r\n          dataIndex: 'start_time'\r\n      },\r\n      {\r\n          title: '结束时间',\r\n          dataIndex: 'end_time'\r\n      },\r\n      {\r\n          title: '订单金额',\r\n          dataIndex: 'total_fee'\r\n      },\r\n      {\r\n          title: '实付金额',\r\n          dataIndex: 'user_pay'\r\n      }\r\n    ]\r\n\r\n    const formItemLayout = {\r\n      labelCol:{span:5},\r\n      wrapperCol:{span:19}\r\n    }\r\n    const selectedRowKeys = this.state.selectedRowKeys;\r\n    const rowSelection = {\r\n        type: 'radio',\r\n        selectedRowKeys\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <BaseForm formList={this.formList} filterSubmit={this.handleFilter}/>\r\n        </Card>\r\n        <Card style={{marginTop:10}}>\r\n          <Button type=\"primary\" onClick={this.openOrderDetail}>订单详情</Button>\r\n          <Button type=\"primary\" style={{marginLeft:10}} onClick={this.handleConfirm}>结束订单</Button>\r\n        </Card>\r\n        <div className=\"content-wrap\">\r\n          <Table\r\n            bordered\r\n            columns={columns}\r\n            dataSource={this.state.list}\r\n            pagination={this.state.pagination}\r\n            rowSelection={rowSelection}\r\n            onRow={(record, index) => {\r\n              return {\r\n                onClick: () => {\r\n                    this.onRowClick(record, index);\r\n                }\r\n              }\r\n            }}\r\n          ></Table>\r\n        </div>\r\n        <Modal\r\n          title=\"结束订单\"\r\n          visible={this.state.orderConfirmVisble}\r\n          onCancel={() => {\r\n            this.setState({\r\n              orderConfirmVisble: false\r\n            })\r\n          }}\r\n          onOk={this.handleFinishOrder}\r\n          width={600}>\r\n            <Form layout=\"horizontal\">\r\n              <FormItem label=\"车辆编号\" {...formItemLayout}>\r\n                  {this.state.orderInfo.bike_sn}\r\n              </FormItem>\r\n              <FormItem label=\"剩余电量\" {...formItemLayout}>\r\n                  {this.state.orderInfo.battery + '%'}\r\n              </FormItem>\r\n              <FormItem label=\"行程开始时间\" {...formItemLayout}>\r\n                  {this.state.orderInfo.start_time}\r\n              </FormItem>\r\n              <FormItem label=\"当前位置\" {...formItemLayout}>\r\n                  {this.state.orderInfo.location}\r\n              </FormItem>\r\n            </Form>\r\n          </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\components\\BaseForm\\index.js",["263","264","265","266","267","268"],"import React, { Component } from 'react'\r\nimport { Input, Select, Form, Button, Checkbox, Radio, DatePicker} from 'antd'\r\nimport Utils from '../../utils/utils';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass FilterForm extends Component {\r\n\r\n  handleFilterSubmit = ()=>{\r\n    let fieldsValue = this.props.form.getFieldsValue();\r\n    this.props.filterSubmit(fieldsValue);\r\n  }\r\n\r\n  reset = ()=>{\r\n    this.props.form.resetFields();\r\n  }\r\n\r\n  initFormList = ()=>{\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formList = this.props.formList;\r\n    const formItemList = [];\r\n    if (formList && formList.length>0){\r\n        formList.forEach((item,i)=>{\r\n            let label = item.label;\r\n            let field = item.field;\r\n            let initialValue = item.initialValue || '';\r\n            let placeholder = item.placeholder;\r\n            let width = item.width;\r\n            if (item.type == '时间查询'){\r\n                const begin_time = <FormItem label=\"订单时间\" key={field}>\r\n                    {\r\n                        getFieldDecorator('begin_time')(\r\n                            <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n                        )\r\n                    }\r\n                </FormItem>;\r\n                formItemList.push(begin_time)\r\n                const end_time = <FormItem label=\"~\" colon={false} key={field}>\r\n                    {\r\n                        getFieldDecorator('end_time')(\r\n                            <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\" />\r\n                        )\r\n                    }\r\n                </FormItem>;\r\n                formItemList.push(end_time)\r\n            }else if(item.type == 'INPUT'){\r\n                const INPUT = <FormItem label={label} key={field}>\r\n                    {\r\n                        getFieldDecorator([field],{\r\n                            initialValue: initialValue\r\n                        })(\r\n                            <Input type=\"text\" placeholder={placeholder} />\r\n                        )\r\n                    }\r\n                </FormItem>;\r\n                formItemList.push(INPUT)\r\n            } else if (item.type == 'SELECT') {\r\n                const SELECT = <FormItem label={label} key={field}>\r\n                    {\r\n                        getFieldDecorator([field], {\r\n                            initialValue: initialValue\r\n                        })(\r\n                            <Select\r\n                                style={{ width: width }}\r\n                                placeholder={placeholder}\r\n                            >\r\n                                {Utils.getOptionList(item.list)}\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>;\r\n                formItemList.push(SELECT)\r\n            } else if (item.type == 'CHECKBOX') {\r\n                const CHECKBOX = <FormItem label={label} key={field}>\r\n                    {\r\n                        getFieldDecorator([field], {\r\n                            valuePropName: 'checked',\r\n                            initialValue: initialValue //true | false\r\n                        })(\r\n                            <Checkbox>\r\n                                {label}\r\n                            </Checkbox>\r\n                        )\r\n                    }\r\n                </FormItem>;\r\n                formItemList.push(CHECKBOX)\r\n            }\r\n        })\r\n    }\r\n    return formItemList;\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Form layout=\"inline\">\r\n        { this.initFormList() }\r\n        <FormItem>\r\n            <Button type=\"primary\" style={{ margin: '0 20px' }} onClick={this.handleFilterSubmit}>查询</Button>\r\n            <Button onClick={this.reset}>重置</Button>\r\n        </FormItem>\r\n      </Form>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Form.create({})(FilterForm)","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\common.js",["269"],"import React, { Component } from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport Header from './components/Header'\r\nimport './style/common.less'\r\n\r\nexport default class Common extends Component {\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Row className=\"simple-page\">\r\n          <Header menuType=\"second\" />\r\n        </Row>\r\n        <Row className=\"content\">\r\n          {this.props.children}\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\order\\detail.js",["270","271","272"],"import React, { Component } from 'react'\r\nimport { Card } from 'antd'\r\nimport axios from '../../axios'\r\nimport './detail.less'\r\n\r\nexport default class Order extends Component {\r\n\r\n  state = {}\r\n\r\n  componentDidMount () {\r\n    let orderId = this.props.match.params.orderId\r\n    if (orderId) {\r\n      this.getDetailInfo(orderId)\r\n    }\r\n  }\r\n\r\n  getDetailInfo = (orderId)=>{\r\n    axios.ajax({\r\n        url:'/order/detail',\r\n        data:{\r\n            params:{\r\n                orderId: orderId\r\n            }\r\n        }\r\n    }).then((res)=>{\r\n        if(res.code ==0){\r\n            this.setState({\r\n                orderInfo:res.result\r\n            })\r\n            this.renderMap(res.result);\r\n        }\r\n    })\r\n  }\r\n\r\n\r\n  renderMap = (result)=>{\r\n    this.map = new window.BMap.Map('orderDetailMap');\r\n    // this.map.centerAndZoom('北京',11);\r\n    // 添加地图控件\r\n    this.addMapControl();\r\n    // 调用路线图绘制方法\r\n    this.drawBikeRoute(result.position_list);\r\n    // 调用服务区绘制方法\r\n    this.drwaServiceArea(result.area);\r\n  }\r\n\r\n  // 添加地图控件\r\n  addMapControl = ()=>{\r\n    let map = this.map;\r\n    map.addControl(new window.BMap.ScaleControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT}));\r\n    map.addControl(new window.BMap.NavigationControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\r\n  }\r\n\r\n  // 绘制用户的行驶路线\r\n  drawBikeRoute = (positionList)=>{\r\n    let map = this.map;\r\n    let startPoint = '';\r\n    let endPoint = '';\r\n    if (positionList.length>0){\r\n        let first = positionList[0];\r\n        let last = positionList[positionList.length-1];\r\n        startPoint = new window.BMap.Point(first.lon,first.lat);\r\n        let startIcon = new window.BMap.Icon('/assets/start_point.png',new window.BMap.Size(36,42),{\r\n            imageSize:new window.BMap.Size(36,42),\r\n            anchor: new window.BMap.Size(18, 42)\r\n        })\r\n\r\n        let startMarker = new window.BMap.Marker(startPoint, { icon: startIcon});\r\n        this.map.addOverlay(startMarker);\r\n\r\n        endPoint = new window.BMap.Point(last.lon, last.lat);\r\n        let endIcon = new window.BMap.Icon('/assets/end_point.png', new window.BMap.Size(36, 42), {\r\n            imageSize: new window.BMap.Size(36, 42),\r\n            anchor: new window.BMap.Size(18, 42)\r\n        })\r\n        let endMarker = new window.BMap.Marker(endPoint, { icon: endIcon });\r\n        this.map.addOverlay(endMarker);\r\n\r\n        // 连接路线图\r\n        let trackPoint = [];\r\n        for(let i=0;i<positionList.length;i++){\r\n            let point = positionList[i];\r\n            trackPoint.push(new window.BMap.Point(point.lon, point.lat));\r\n        }\r\n\r\n        let polyline = new window.BMap.Polyline(trackPoint,{\r\n            strokeColor:'#1869AD',\r\n            strokeWeight:3,\r\n            strokeOpacity:1\r\n        })\r\n        this.map.addOverlay(polyline);\r\n        this.map.centerAndZoom(endPoint, 11);\r\n    }  \r\n  }\r\n\r\n  // 绘制服务区\r\n  drwaServiceArea = (positionList)=>{\r\n    // 连接路线图\r\n    let trackPoint = [];\r\n    for (let i = 0; i < positionList.length; i++) {\r\n        let point = positionList[i];\r\n        trackPoint.push(new window.BMap.Point(point.lon, point.lat));\r\n    }\r\n    // 绘制服务区\r\n    let polygon = new window.BMap.Polygon(trackPoint, {\r\n        strokeColor: '#CE0000',\r\n        strokeWeight: 4,\r\n        strokeOpacity: 1,\r\n        fillColor: '#ff8605',\r\n        fillOpacity:0.4\r\n    })\r\n    this.map.addOverlay(polygon);\r\n  }\r\n\r\n  render () {\r\n    const info = this.state.orderInfo || {}\r\n    \r\n    return (\r\n      <div>\r\n        <Card>\r\n          <div id=\"orderDetailMap\" className=\"order-map\"></div>\r\n          <div className=\"detail-items\">\r\n            <div className=\"item-title\">基础信息</div>\r\n            <ul className=\"detail-form\">\r\n                <li>\r\n                    <div className=\"detail-form-left\">用车模式</div>\r\n                    <div className=\"detail-form-content\">{info.mode == 1 ?'服务区':'停车点'}</div>\r\n                </li>\r\n                <li>\r\n                    <div className=\"detail-form-left\">订单编号</div>\r\n                    <div className=\"detail-form-content\">{info.order_sn}</div>\r\n                </li>\r\n                <li>\r\n                    <div className=\"detail-form-left\">车辆编号</div>\r\n                    <div className=\"detail-form-content\">{info.bike_sn}</div>\r\n                </li>\r\n                <li>\r\n                    <div className=\"detail-form-left\">用户姓名</div>\r\n                    <div className=\"detail-form-content\">{info.user_name}</div>\r\n                </li>\r\n                <li>\r\n                    <div className=\"detail-form-left\">手机号码</div>\r\n                    <div className=\"detail-form-content\">{info.mobile}</div>\r\n                </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"detail-items\">\r\n            <div className=\"item-title\">行驶轨迹</div>\r\n            <ul className=\"detail-form\">\r\n                <li>\r\n                    <div className=\"detail-form-left\">行程起点</div>\r\n                    <div className=\"detail-form-content\">{info.start_location}</div>\r\n                </li>\r\n                <li>\r\n                    <div className=\"detail-form-left\">行程终点</div>\r\n                    <div className=\"detail-form-content\">{info.end_location}</div>\r\n                </li>\r\n                <li>\r\n                    <div className=\"detail-form-left\">行驶里程</div>\r\n                    <div className=\"detail-form-content\">{info.distance/1000}公里</div>\r\n                </li>\r\n            </ul>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\user\\index.js",["273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290"],"import React, { Component } from 'react'\r\nimport { Card, Button, Table, Form, Input, Checkbox,Select,Radio, Icon, message, Modal, DatePicker } from 'antd'\r\nimport axios from '../../axios/index'\r\nimport Utils from '../../utils/utils'\r\nimport ETable from '../../components/ETable/index'\r\nimport Moment from 'moment'\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst RadioGroup = Radio.Group;\r\n\r\nexport default class User extends Component {\r\n\r\n  state = {\r\n    list: []\r\n  }\r\n\r\n  params = {\r\n    page: 1\r\n  }\r\n\r\n  requestList = ()=>{\r\n    axios.ajax({\r\n        url:'/table/list1',\r\n        data:{\r\n            params:{\r\n                page:this.params.page\r\n            }\r\n        }\r\n    }).then((res)=>{\r\n        let _this = this;\r\n        this.setState({\r\n            list:res.result.list.map((item,index)=>{\r\n                item.key=index\r\n                return item;\r\n            }),\r\n            pagination:Utils.pagination(res,(current)=>{\r\n                _this.params.page = current;\r\n                _this.requestList();\r\n            })\r\n        })\r\n    })\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.requestList()\r\n  }\r\n\r\n  // 操作员工\r\n  handleOperator = (type)=>{\r\n    let item = this.state.selectedItem;\r\n    if(type =='create'){\r\n        this.setState({\r\n            title:'创建员工',\r\n            isVisible:true,\r\n            type\r\n        })\r\n    }else if(type==\"edit\" || type=='detail'){\r\n        if(!item){\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请选择一个用户'\r\n            })\r\n            return;\r\n        }\r\n        this.setState({\r\n            title:type=='edit'?'编辑用户':'查看详情',\r\n            isVisible:true,\r\n            userInfo:item,\r\n            type\r\n        })\r\n    }else if(type==\"delete\"){\r\n        if(!item){\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请选择一个用户'\r\n            })\r\n            return;\r\n        }\r\n        Utils.ui.confirm({\r\n            text:'确定要删除此用户吗？',\r\n            onOk:()=>{\r\n                axios.ajax({\r\n                    url:'/user/delete',\r\n                    data:{\r\n                        params:{\r\n                            id:item.id\r\n                        }\r\n                    }\r\n                }).then((res)=>{\r\n                    if(res.code ==0){\r\n                        this.setState({\r\n                            isVisible:false\r\n                        })\r\n                        this.requestList();\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n  }\r\n\r\n  handleSubmit = ()=>{\r\n    let type = this.state.type;\r\n    // let data = this.userForm.props.form.getFieldsValue();\r\n    // axios.ajax({\r\n    //     url:type == 'create'?'/user/add':'/user/edit',\r\n    //     data:{\r\n    //         params:{\r\n    //             ...data\r\n    //         }\r\n    //     }\r\n    // }).then((res)=>{\r\n    //     if(res.code ==0){\r\n    //         this.setState({\r\n    //             isVisible:false\r\n    //         })\r\n    //         this.requestList();\r\n    //     }\r\n    // })\r\n  }\r\n\r\n\r\n  render () {\r\n    const columns = [{\r\n      title: 'id',\r\n      dataIndex: 'id'\r\n    }, {\r\n      title: '用户名',\r\n      dataIndex: 'username'\r\n    }, {\r\n      title: '性别',\r\n      dataIndex: 'sex',\r\n      render(sex){\r\n          return sex ==1 ?'男':'女'\r\n      }\r\n    }, {\r\n      title: '状态',\r\n      dataIndex: 'state',\r\n      render(state){\r\n          let config = {\r\n              '1':'咸鱼一条',\r\n              '2':'风华浪子',\r\n              '3':'北大才子一枚',\r\n              '4':'百度FE',\r\n              '5':'创业者'\r\n          }\r\n          return config[state];\r\n      }\r\n    },{\r\n      title: '爱好',\r\n      dataIndex: 'interest',\r\n      render(interest){\r\n          let config = {\r\n              '1':'游泳',\r\n              '2':'打篮球',\r\n              '3':'踢足球',\r\n              '4':'跑步',\r\n              '5':'爬山',\r\n              '6':'骑行',\r\n              '7':'桌球',\r\n              '8':'麦霸'\r\n          }\r\n          return config[interest];\r\n      }\r\n    },{\r\n      title: '爱好',\r\n      dataIndex: 'isMarried',\r\n      render(isMarried){\r\n          return isMarried?'已婚':'未婚'\r\n      }\r\n    },{\r\n      title: '生日',\r\n      dataIndex: 'birthday'\r\n    },{\r\n      title: '联系地址',\r\n      dataIndex: 'address'\r\n    },{\r\n      title: '早起时间',\r\n      dataIndex: 'time'\r\n    }\r\n  ]\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Form layout=\"inline\">\r\n            <FormItem>\r\n              <Input placeholder=\"请输入用户名\"/>\r\n            </FormItem>\r\n            <FormItem>\r\n              <Input type=\"password\" placeholder=\"请输入密码\"/>\r\n            </FormItem>\r\n            <FormItem>\r\n              <Button type=\"primary\">登 录</Button>\r\n            </FormItem>\r\n          </Form>\r\n        </Card>\r\n        <Card style={{marginTop:10}}>\r\n          <Button type=\"primary\" icon=\"plus\" onClick={()=>this.handleOperator('create')}>创建员工</Button>\r\n          <Button icon=\"edit\" onClick={()=>this.handleOperator('edit')}>编辑员工</Button>\r\n          <Button onClick={()=>this.handleOperator('detail')}>员工详情</Button>\r\n          <Button type=\"danger\" icon=\"delete\" onClick={()=>this.handleOperator('delete')}>删除员工</Button>\r\n        </Card>\r\n        <div className=\"content-wrap\">\r\n          <ETable\r\n              columns={columns}\r\n              updateSelectedItem={Utils.updateSelectedItem.bind(this)}\r\n              selectedRowKeys={this.state.selectedRowKeys}\r\n              dataSource={this.state.list}\r\n              pagination={this.state.pagination}\r\n          />\r\n        </div>\r\n        <Modal\r\n          title={this.state.title}\r\n          visible={this.state.isVisible}\r\n          onOk={this.handleSubmit}\r\n          width={800}\r\n          onCancel={()=>{\r\n              this.userForm.props.form.resetFields();\r\n              this.setState({\r\n                  isVisible:false,\r\n                  userInfo:''\r\n              })\r\n          }}>\r\n            <UserForm userInfo={this.state.userInfo} type={this.state.type} wrappedComponentRef={(inst) => this.userForm = inst }/>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass UserForm extends Component {\r\n\r\n  getState = (state)=>{\r\n    return {\r\n        '1':'咸鱼一条',\r\n        '2':'风华浪子',\r\n        '3':'北大才子一枚',\r\n        '4':'百度FE',\r\n        '5':'创业者'\r\n    }[state]\r\n  }\r\n\r\n\r\n  render () {\r\n\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n        labelCol: {span: 5},\r\n        wrapperCol: {span: 16}\r\n    };\r\n    const userInfo = this.props.userInfo || {};\r\n    const type = this.props.type;\r\n\r\n    return (\r\n      <Form layout=\"horizontal\">\r\n        <FormItem label=\"姓名\" {...formItemLayout}>\r\n          {\r\n            userInfo && type=='detail'?userInfo.username:\r\n            getFieldDecorator('user_name',{\r\n                initialValue:userInfo.username\r\n            })(\r\n                <Input type=\"text\" placeholder=\"请输入姓名\"/>\r\n            )\r\n          }\r\n        </FormItem>\r\n        <FormItem label=\"性别\" {...formItemLayout}>\r\n          {\r\n            userInfo && type=='detail'?userInfo.sex==1?'男':'女':\r\n            getFieldDecorator('sex',{\r\n                initialValue:userInfo.sex\r\n            })(\r\n            <RadioGroup>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n            </RadioGroup>\r\n          )}\r\n        </FormItem>\r\n        <FormItem label=\"状态\" {...formItemLayout}>\r\n          { \r\n            userInfo && type=='detail'?this.getState(userInfo.state):\r\n            getFieldDecorator('state',{\r\n                initialValue:userInfo.state\r\n            })(\r\n            <Select>\r\n                <Option value={1}>咸鱼一条</Option>\r\n                <Option value={2}>风华浪子</Option>\r\n                <Option value={3}>北大才子一枚</Option>\r\n                <Option value={4}>百度FE</Option>\r\n                <Option value={5}>创业者</Option>\r\n            </Select>\r\n          )}\r\n        </FormItem>\r\n        <FormItem label=\"生日\" {...formItemLayout}>\r\n          {\r\n            userInfo && type=='detail'?userInfo.birthday:\r\n            getFieldDecorator('birthday',{\r\n                initialValue:Moment(userInfo.birthday)\r\n            })(\r\n            <DatePicker />\r\n          )}\r\n        </FormItem>\r\n        <FormItem label=\"联系地址\" {...formItemLayout}>\r\n          {\r\n            userInfo && type=='detail'?userInfo.address:\r\n            getFieldDecorator('address',{\r\n                initialValue:userInfo.address\r\n            })(\r\n            <Input.TextArea rows={3} placeholder=\"请输入联系地址\"/>\r\n          )}\r\n        </FormItem>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nUserForm = Form.create({})(UserForm)\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\components\\ETable\\index.js",["291","292","293","294","295","296","297"],"import React, { Component } from 'react'\r\nimport Utils from '../../utils/utils'\r\nimport {Table} from 'antd'\r\nimport  \"./index.less\"\r\n\r\nexport default class ETable extends Component {\r\n\r\n  state = {}\r\n\r\n  //处理行点击事件\r\n  onRowClick = (record, index) => {\r\n    let rowSelection = this.props.rowSelection;\r\n    if(rowSelection == 'checkbox'){\r\n        let selectedRowKeys = this.props.selectedRowKeys;\r\n        let selectedIds = this.props.selectedIds;\r\n        let selectedItem = this.props.selectedItem || [];\r\n        if (selectedIds) {\r\n            const i = selectedIds.indexOf(record.id);\r\n            if (i == -1) {//避免重复添加\r\n                selectedIds.push(record.id)\r\n                selectedRowKeys.push(index);\r\n                selectedItem.push(record);\r\n            }else{\r\n                selectedIds.splice(i,1);\r\n                selectedRowKeys.splice(i,1);\r\n                selectedItem.splice(i,1);\r\n            }\r\n        } else {\r\n            selectedIds = [record.id];\r\n            selectedRowKeys = [index]\r\n            selectedItem = [record];\r\n        }\r\n        this.props.updateSelectedItem(selectedRowKeys,selectedItem || {},selectedIds);\r\n    }else{\r\n        let selectKey = [index];\r\n        const selectedRowKeys = this.props.selectedRowKeys;\r\n        if (selectedRowKeys && selectedRowKeys[0] == index){\r\n            return;\r\n        }\r\n        this.props.updateSelectedItem(selectKey,record || {});\r\n    }\r\n  }\r\n\r\n\r\n  // 选择框变更\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let rowSelection = this.props.rowSelection;\r\n    const selectedIds = [];\r\n    if(rowSelection == 'checkbox'){\r\n        selectedRows.map((item)=>{\r\n            selectedIds.push(item.id);\r\n        });\r\n        this.setState({\r\n            selectedRowKeys,\r\n            selectedIds:selectedIds,\r\n            selectedItem: selectedRows[0]\r\n        });\r\n    }\r\n    this.props.updateSelectedItem(selectedRowKeys,selectedRows[0],selectedIds);\r\n  }\r\n\r\n\r\n  onSelectAll = (selected, selectedRows, changeRows) => {\r\n    let selectedIds = [];\r\n    let selectKey = [];\r\n    selectedRows.forEach((item,i)=> {\r\n        selectedIds.push(item.id);\r\n        selectKey.push(i);\r\n    });\r\n    this.props.updateSelectedItem(selectKey,selectedRows[0] || {},selectedIds);\r\n  }\r\n\r\n  getOptions = () => {\r\n    let p = this.props;\r\n    const name_list = {\r\n        \"订单编号\":170,\r\n        \"车辆编号\":80,\r\n        \"手机号码\":96,\r\n        \"用户姓名\":70,\r\n        \"密码\":70,\r\n        \"运维区域\":300,\r\n        \"车型\":42,\r\n        \"故障编号\":76,\r\n        \"代理商编码\":97,\r\n        \"角色ID\":64\r\n    };\r\n    if (p.columns && p.columns.length > 0) {\r\n        p.columns.forEach((item)=> {\r\n            //开始/结束 时间\r\n            if(!item.title){\r\n                return\r\n            }\r\n            if(!item.width){\r\n                if(item.title.indexOf(\"时间\") > -1 && item.title.indexOf(\"持续时间\") < 0){\r\n                    item.width = 132\r\n                }else if(item.title.indexOf(\"图片\") > -1){\r\n                    item.width = 86\r\n                }else if(item.title.indexOf(\"权限\") > -1 || item.title.indexOf(\"负责城市\") > -1){\r\n                    item.width = '40%';\r\n                    item.className = \"text-left\";\r\n                }else{\r\n                    if(name_list[item.title]){\r\n                        item.width = name_list[item.title];\r\n                    }\r\n                }\r\n            }\r\n            item.bordered = true;\r\n        });\r\n    }\r\n    const { selectedRowKeys } = this.props;\r\n    const rowSelection = {\r\n        type: 'radio',\r\n        selectedRowKeys,\r\n        onChange: this.onSelectChange,\r\n        onSelect:(record, selected, selectedRows)=>{\r\n            console.log('...')\r\n        },\r\n        onSelectAll:this.onSelectAll\r\n    };\r\n    let row_selection = this.props.rowSelection;\r\n    // 当属性未false或者null时，说明没有单选或者复选列\r\n    if(row_selection===false || row_selection === null){\r\n        row_selection = false;\r\n    }else if(row_selection == 'checkbox'){\r\n        //设置类型未复选框\r\n        rowSelection.type = 'checkbox';\r\n    }else{\r\n        //默认未单选\r\n        row_selection = 'radio';\r\n    }\r\n    return <Table \r\n            className=\"card-wrap page-table\"\r\n            bordered \r\n            {...this.props}\r\n            rowSelection={row_selection?rowSelection:null}\r\n            onRow={(record,index) => ({\r\n                onClick: ()=>{\r\n                    if(!row_selection){\r\n                        return;\r\n                    }\r\n                    this.onRowClick(record,index)\r\n                }\r\n              })}\r\n        />\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <div>{this.getOptions()}</div>\r\n    )\r\n  }\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\map\\bikeMap.js",[],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\echarts\\bar\\index.js",[],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\echarts\\pie\\index.js",["298"],"import React, { Component } from 'react'\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport echartTheme from '../echartTheme'\r\nimport themeLight from '../themeLight'\r\n// import echarts from 'echarts'\r\nimport echarts from 'echarts/lib/echarts'\r\n// 引入饼图和折线图\r\nimport 'echarts/lib/chart/pie'\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\nimport 'echarts/lib/component/markPoint';\r\n\r\n\r\nexport default class Pie extends Component {\r\n\r\n  state = {}\r\n\r\n  componentDidMount () {\r\n    echarts.registerTheme('Imooc',themeLight)\r\n  }\r\n\r\n  getOption() {\r\n    let option = {\r\n        title: {\r\n            text: '用户骑行订单',\r\n            x : 'center'\r\n        },\r\n        legend : {\r\n            orient: 'vertical',\r\n            right: 10,\r\n            top: 20,\r\n            bottom: 20,\r\n            data: ['周一','周二','周三','周四','周五','周六','周日']\r\n        },\r\n        tooltip: {\r\n            trigger : 'item',\r\n            formatter : \"{a} <br/>{b} : {c} ({d}%)\"\r\n        },\r\n        series: [\r\n            {\r\n                name : '订单量',\r\n                type : 'pie',\r\n                radius : '55%',\r\n                center : [\r\n                    '50%', '60%'\r\n                ],\r\n                data:[\r\n                    {\r\n                        value:1000,\r\n                        name:'周一'\r\n                    },\r\n                    {\r\n                        value: 1000,\r\n                        name: '周二'\r\n                    },\r\n                    {\r\n                        value: 2000,\r\n                        name: '周三'\r\n                    },\r\n                    {\r\n                        value: 1500,\r\n                        name: '周四'\r\n                    },\r\n                    {\r\n                        value: 3000,\r\n                        name: '周五'\r\n                    },\r\n                    {\r\n                        value: 2000,\r\n                        name: '周六'\r\n                    },\r\n                    {\r\n                        value: 1200,\r\n                        name: '周日'\r\n                    },\r\n                ],\r\n                itemStyle : {\r\n                    emphasis: {\r\n                        shadowBlur: 10,\r\n                        shadowOffsetX: 0,\r\n                        shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n    return option;\r\n  }\r\n\r\n\r\n  getOption2() {\r\n    let option = {\r\n        title: {\r\n            text: '用户骑行订单',\r\n            x: 'center'\r\n        },\r\n        legend: {\r\n            orient: 'vertical',\r\n            right: 10,\r\n            top: 20,\r\n            bottom: 20,\r\n            data: [\r\n                '周一',\r\n                '周二',\r\n                '周三',\r\n                '周四',\r\n                '周五',\r\n                '周六',\r\n                '周日'\r\n            ]\r\n        },\r\n        tooltip: {\r\n            trigger: 'item',\r\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n        },\r\n        series: [\r\n            {\r\n                name: '订单量',\r\n                type: 'pie',\r\n                radius: ['50%', '80%'],\r\n                center: [\r\n                    '50%', '60%'\r\n                ],\r\n                data: [\r\n                    {\r\n                        value: 1000,\r\n                        name: '周一'\r\n                    }, {\r\n                        value: 1000,\r\n                        name: '周二'\r\n                    }, {\r\n                        value: 2000,\r\n                        name: '周三'\r\n                    }, {\r\n                        value: 1500,\r\n                        name: '周四'\r\n                    }, {\r\n                        value: 3000,\r\n                        name: '周五'\r\n                    }, {\r\n                        value: 2000,\r\n                        name: '周六'\r\n                    }, {\r\n                        value: 1200,\r\n                        name: '周日'\r\n                    }\r\n                ],\r\n                itemStyle: {\r\n                    emphasis: {\r\n                        shadowBlur: 10,\r\n                        shadowOffsetX: 0,\r\n                        shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n    return option;\r\n  }\r\n\r\n\r\n  getOption3() {\r\n    let option = {\r\n        title: {\r\n            text: '用户骑行订单',\r\n            x: 'center'\r\n        },\r\n        legend: {\r\n            orient: 'vertical',\r\n            right: 10,\r\n            top: 20,\r\n            bottom: 20,\r\n            data: [\r\n                '周一',\r\n                '周二',\r\n                '周三',\r\n                '周四',\r\n                '周五',\r\n                '周六',\r\n                '周日'\r\n            ]\r\n        },\r\n        tooltip: {\r\n            trigger: 'item',\r\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n        },\r\n        series: [\r\n            {\r\n                name: '订单量',\r\n                type: 'pie',\r\n                radius: '55%',\r\n                center: [\r\n                    '50%', '50%'\r\n                ],\r\n                data: [\r\n                    {\r\n                        value: 1000,\r\n                        name: '周一'\r\n                    }, {\r\n                        value: 1000,\r\n                        name: '周二'\r\n                    }, {\r\n                        value: 2000,\r\n                        name: '周三'\r\n                    }, {\r\n                        value: 1500,\r\n                        name: '周四'\r\n                    }, {\r\n                        value: 3000,\r\n                        name: '周五'\r\n                    }, {\r\n                        value: 2000,\r\n                        name: '周六'\r\n                    }, {\r\n                        value: 1200,\r\n                        name: '周日'\r\n                    }\r\n                ].sort(function (a, b) { return a.value - b.value; }),\r\n                roseType: 'radius',\r\n                animationType: 'scale',\r\n                animationEasing: 'elasticOut',\r\n                animationDelay: function (idx) {\r\n                    return Math.random() * 200;\r\n                }\r\n            }\r\n        ]\r\n    }\r\n    return option;\r\n  }\r\n\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Card title=\"饼形图表之一\">\r\n            <ReactEcharts\r\n                option={this.getOption()}\r\n                theme=\"Imooc\"\r\n                notMerge={true}\r\n                lazyUpdate={true}\r\n                style={{ height: 500 }}/>\r\n        </Card>\r\n        <Card title=\"饼形图之二\" style={{marginTop:10}}>\r\n            <ReactEcharts\r\n                option={this.getOption2()}\r\n                theme=\"Imooc\"\r\n                notMerge={true}\r\n                lazyUpdate={true}\r\n                style={{ height: 500 }}/>\r\n        </Card>\r\n        <Card title=\"饼形图之三\" style={{marginTop:10}}>\r\n            <ReactEcharts\r\n                option={this.getOption3()}\r\n                theme=\"Imooc\"\r\n                notMerge={true}\r\n                lazyUpdate={true}\r\n                style={{ height: 500 }}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\echarts\\line\\index.js",[],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\echarts\\echartTheme.js",["299"],"export default {\n    \"color\": [\n        \"#f9c700\",\n        \"#ff5400\",\n        \"#6699cc\",\n        \"#9cb3c5\",\n        \"#e0e6ec\",\n        \"#666666\",\n        \"#787464\",\n        \"#cc7e63\",\n        \"#724e58\",\n        \"#4b565b\"\n    ],\n    \"backgroundColor\": \"#ffffff\",\n    \"textStyle\": {},\n    \"title\": {\n        \"textStyle\": {\n            \"color\": \"#cccccc\"\n        },\n        \"subtextStyle\": {\n            \"color\": \"#cccccc\"\n        }\n    },\n    \"line\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 1\n            }\n        },\n        \"lineStyle\": {\n            \"normal\": {\n                \"width\": 2\n            }\n        },\n        \"symbolSize\": \"10\",\n        \"symbol\": \"emptyCircle\",\n        \"smooth\": false\n    },\n    \"pie\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            },\n            \"emphasis\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            }\n        }\n    },\n    \"categoryAxis\": {\n        \"axisLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisTick\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisLabel\": {\n            \"show\": true,\n            \"textStyle\": {\n                \"color\": \"#999999\",\n                \"fontSize\": \"14\"\n            }\n        },\n        \"splitLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": [\n                    \"#f1f3f5\"\n                ]\n            }\n        },\n        \"splitArea\": {\n            \"show\": false,\n            \"areaStyle\": {\n                \"color\": [\n                    \"rgba(250,250,250,0.3)\",\n                    \"rgba(200,200,200,0.3)\"\n                ]\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"axisLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisTick\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisLabel\": {\n            \"show\": true,\n            \"textStyle\": {\n                \"color\": \"#999999\",\n                \"fontSize\": \"14\"\n            }\n        },\n        \"splitLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": [\n                    \"#f1f3f5\"\n                ]\n            }\n        },\n        \"splitArea\": {\n            \"show\": false,\n            \"areaStyle\": {\n                \"color\": [\n                    \"rgba(250,250,250,0.3)\",\n                    \"rgba(200,200,200,0.3)\"\n                ]\n            }\n        }\n    },\n    \"toolbox\": {\n        \"iconStyle\": {\n            \"normal\": {\n                \"borderColor\": \"#999999\"\n            },\n            \"emphasis\": {\n                \"borderColor\": \"#666666\"\n            }\n        }\n    },\n    \"legend\": {\n        \"textStyle\": {\n            \"color\": \"#333333\"\n        }\n    },\n    \"tooltip\": {\n        \"axisPointer\": {\n            \"lineStyle\": {\n                \"color\": \"#cccccc\",\n                \"width\": 1\n            },\n            \"crossStyle\": {\n                \"color\": \"#cccccc\",\n                \"width\": 1\n            }\n        }\n    },\n    \"timeline\": {\n        \"lineStyle\": {\n            \"color\": \"#293c55\",\n            \"width\": 1\n        },\n        \"itemStyle\": {\n            \"normal\": {\n                \"color\": \"#293c55\",\n                \"borderWidth\": 1\n            },\n            \"emphasis\": {\n                \"color\": \"#a9334c\"\n            }\n        },\n        \"controlStyle\": {\n            \"normal\": {\n                \"color\": \"#293c55\",\n                \"borderColor\": \"#293c55\",\n                \"borderWidth\": 0.5\n            },\n            \"emphasis\": {\n                \"color\": \"#293c55\",\n                \"borderColor\": \"#293c55\",\n                \"borderWidth\": 0.5\n            }\n        },\n        \"checkpointStyle\": {\n            \"color\": \"#e43c59\",\n            \"borderColor\": \"rgba(194,53,49,0.5)\"\n        },\n        \"label\": {\n            \"normal\": {\n                \"textStyle\": {\n                    \"color\": \"#293c55\"\n                }\n            },\n            \"emphasis\": {\n                \"textStyle\": {\n                    \"color\": \"#293c55\"\n                }\n            }\n        }\n    },\n    \"markPoint\": {\n        \"label\": {\n            \"normal\": {\n                \"textStyle\": {\n                    \"color\": \"#ffffff\"\n                }\n            },\n            \"emphasis\": {\n                \"textStyle\": {\n                    \"color\": \"#ffffff\"\n                }\n            }\n        }\n    }\n}","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\echarts\\themeLight.js",["300"],"var colorPalette = [\n    '#C1232B',\n    '#27727B',\n    '#FCCE10',\n    '#E87C25',\n    '#B5C334',\n    '#FE8463',\n    '#9BCA63',\n    '#FAD860',\n    '#F3A43B',\n    '#60C0DD',\n    '#D7504B',\n    '#C6E579',\n    '#F4E001',\n    '#F0805A',\n    '#26C0C0'\n];\nexport default {\n\n    color: colorPalette,\n\n    title: {\n        textStyle: {\n            fontWeight: 'normal',\n            color: '#27727B'\n        }\n    },\n\n    visualMap: {\n        color: ['#C1232B', '#FCCE10']\n    },\n\n    toolbox: {\n        iconStyle: {\n            normal: {\n                borderColor: colorPalette[0]\n            }\n        }\n    },\n\n    tooltip: {\n        backgroundColor: 'rgba(50,50,50,0.5)',\n        axisPointer: {\n            type: 'line',\n            lineStyle: {\n                color: '#27727B',\n                type: 'dashed'\n            },\n            crossStyle: {\n                color: '#27727B'\n            },\n            shadowStyle: {\n                color: 'rgba(200,200,200,0.3)'\n            }\n        }\n    },\n\n    dataZoom: {\n        dataBackgroundColor: 'rgba(181,195,52,0.3)',\n        fillerColor: 'rgba(181,195,52,0.2)',\n        handleColor: '#27727B'\n    },\n\n    categoryAxis: {\n        axisLine: {\n            lineStyle: {\n                color: '#27727B'\n            }\n        },\n        splitLine: {\n            show: false\n        }\n    },\n\n    valueAxis: {\n        axisLine: {\n            show: false\n        },\n        splitArea: {\n            show: false\n        },\n        splitLine: {\n            lineStyle: {\n                color: ['#ccc'],\n                type: 'dashed'\n            }\n        }\n    },\n\n    timeline: {\n        lineStyle: {\n            color: '#27727B'\n        },\n        controlStyle: {\n            normal: {\n                color: '#27727B',\n                borderColor: '#27727B'\n            }\n        },\n        symbol: 'emptyCircle',\n        symbolSize: 3\n    },\n\n    line: {\n        itemStyle: {\n            normal: {\n                borderWidth: 2,\n                borderColor: '#fff',\n                lineStyle: {\n                    width: 3\n                }\n            },\n            emphasis: {\n                borderWidth: 0\n            }\n        },\n        symbol: 'circle',\n        symbolSize: 3.5\n    },\n\n    candlestick: {\n        itemStyle: {\n            normal: {\n                color: '#C1232B',\n                color0: '#B5C334',\n                lineStyle: {\n                    width: 1,\n                    color: '#C1232B',\n                    color0: '#B5C334'\n                }\n            }\n        }\n    },\n\n    graph: {\n        color: colorPalette\n    },\n\n    map: {\n        label: {\n            normal: {\n                textStyle: {\n                    color: '#C1232B'\n                }\n            },\n            emphasis: {\n                textStyle: {\n                    color: 'rgb(100,0,0)'\n                }\n            }\n        },\n        itemStyle: {\n            normal: {\n                areaColor: '#ddd',\n                borderColor: '#eee'\n            },\n            emphasis: {\n                areaColor: '#fe994e'\n            }\n        }\n    },\n\n    gauge: {\n        axisLine: {\n            lineStyle: {\n                color: [\n                    [\n                        0.2, '#B5C334'\n                    ],\n                    [\n                        0.8, '#27727B'\n                    ],\n                    [1, '#C1232B']\n                ]\n            }\n        },\n        axisTick: {\n            splitNumber: 2,\n            length: 5,\n            lineStyle: {\n                color: '#fff'\n            }\n        },\n        axisLabel: {\n            textStyle: {\n                color: '#fff'\n            }\n        },\n        splitLine: {\n            length: '5%',\n            lineStyle: {\n                color: '#fff'\n            }\n        },\n        title: {\n            offsetCenter: [0, -20]\n        }\n    }\n}","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\rich\\index.js",["301"],"import React, { Component } from 'react'\r\nimport {Button,Card,Modal} from 'antd'\r\nimport {Editor} from 'react-draft-wysiwyg'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport draftjs from 'draftjs-to-html'\r\n\r\nexport default class Rich extends Component {\r\n\r\n  state = {\r\n    showRichText:false,\r\n    editorContent: '',\r\n    editorState: '',\r\n  }\r\n\r\n\r\n  handleClearContent = ()=>{\r\n    this.setState({\r\n        editorState:''\r\n    })\r\n  }\r\n\r\n  handleGetText = ()=>{\r\n    this.setState({\r\n        showRichText:true\r\n    })\r\n  }\r\n\r\n\r\n  onEditorChange = (editorContent) => {\r\n    this.setState({\r\n        editorContent,\r\n    });\r\n  }\r\n\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n        editorState\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const { editorContent, editorState } = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Card style={{marginTop:10}}>\r\n            <Button type=\"primary\" onClick={this.handleClearContent}>清空内容</Button>\r\n            <Button type=\"primary\" onClick={this.handleGetText}>获取HTML文本</Button>\r\n        </Card>\r\n        <Card title=\"富文本编辑器\">\r\n            <Editor\r\n                editorState={editorState}\r\n                onContentStateChange={this.onEditorChange}\r\n                onEditorStateChange={this.onEditorStateChange}\r\n            />\r\n        </Card>\r\n        <Modal\r\n          title=\"富文本\"\r\n          visible={this.state.showRichText}\r\n          onCancel={()=>{\r\n              this.setState({\r\n                  showRichText:false\r\n              })\r\n          }}\r\n          footer={null}\r\n        >\r\n          {draftjs(this.state.editorContent)}\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\pages\\permission\\index.js",["302","303","304"],"import React, { Component } from 'react'\r\nimport {Card, Button, Form, Input, Select, Tree, Transfer, Modal} from 'antd'\r\nimport axios from '../../axios/index'\r\nimport ETable from '../../components/ETable/index'\r\nimport menuConfig from '../../config/menuConfig'\r\nimport Utils from '../../utils/utils'\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst TreeNode = Tree.TreeNode;\r\n\r\nexport default class Permission extends Component {\r\n\r\n  state = {}\r\n\r\n  componentDidMount () {\r\n    this.requestList()\r\n  }\r\n\r\n  requestList = ()=>{\r\n    axios.ajax({\r\n        url:'/role/list',\r\n        data:{\r\n            params:{}\r\n        }\r\n    }).then((res)=>{\r\n        if(res.code == 0){\r\n            let list  = res.result.item_list.map((item,i)=>{\r\n                item.key = i;\r\n                return item;\r\n            })\r\n            this.setState({\r\n                list\r\n            })\r\n        }\r\n    })\r\n  }\r\n\r\n  // 角色创建\r\n  handleRole = ()=>{\r\n    this.setState({\r\n        isRoleVisible:true\r\n    })\r\n  }\r\n\r\n\r\n  // 角色提交\r\n  handleRoleSubmit = ()=>{\r\n    let data = this.roleForm.props.form.getFieldsValue();\r\n    axios.ajax({\r\n        url:'role/create',\r\n        data:{\r\n            params:{\r\n                ...data\r\n            }\r\n        }\r\n    }).then((res)=>{\r\n        if(res){\r\n            this.setState({\r\n                isRoleVisible:false\r\n            })\r\n            this.requestList();\r\n        }\r\n    })\r\n  }\r\n\r\n\r\n  handlePermission = ()=>{\r\n    if (!this.state.selectedItem) {\r\n        Modal.info({\r\n            title: '信息',\r\n            content: '请选择一个角色'\r\n        })\r\n        return;\r\n    }\r\n    this.setState({\r\n        isPermVisible: true,\r\n        detailInfo: this.state.selectedItem\r\n    });\r\n    let menuList = this.state.selectedItem.menus;\r\n    this.setState({\r\n        menuInfo:menuList\r\n    })\r\n  }\r\n\r\n\r\n  handlePermEditSubmit = ()=>{\r\n    let data = this.roleForm.props.form.getFieldsValue();\r\n    data.role_id = this.state.selectedItem.id;\r\n    data.menus = this.state.menuInfo;\r\n    axios.ajax({\r\n        url:'/permission/edit',\r\n        data:{\r\n            params:{\r\n                ...data\r\n            }\r\n        }\r\n    }).then((res)=>{\r\n        if(res){\r\n            this.setState({\r\n                isPermVisible:false\r\n            })\r\n            this.requestList();\r\n        }\r\n    })\r\n  }\r\n\r\n  // 用户授权\r\n  handleUserAuth = ()=>{\r\n    if (!this.state.selectedItem) {\r\n        Modal.info({\r\n            title: '信息',\r\n            content: '未选中任何项目'\r\n        })\r\n        return;\r\n    }\r\n    this.getRoleUserList(this.state.selectedItem.id);\r\n    this.setState({\r\n        isUserVisible: true,\r\n        isAuthClosed: false,\r\n        detailInfo: this.state.selectedItem\r\n    });\r\n  }\r\n\r\n\r\n  getRoleUserList = (id)=>{\r\n    axios.ajax({\r\n        url:'/role/user_list',\r\n        data:{\r\n            params:{\r\n                id:id\r\n            }\r\n        }\r\n    }).then((res)=>{\r\n        if(res){\r\n            this.getAuthUserList(res.result);\r\n        }\r\n    })\r\n  }\r\n\r\n\r\n  // 筛选目标用户\r\n  getAuthUserList = (dataSource) => {\r\n    const mockData = [];\r\n    const targetKeys = [];\r\n    if (dataSource && dataSource.length > 0) {\r\n        for (let i = 0; i < dataSource.length; i++) {\r\n            const data = {\r\n                key: dataSource[i].user_id,\r\n                title: dataSource[i].user_name,\r\n                status: dataSource[i].status,\r\n            };\r\n            if (data.status == 1) {\r\n                targetKeys.push(data.key);\r\n            }\r\n            mockData.push(data);\r\n        }\r\n    }\r\n    this.setState({mockData, targetKeys});\r\n  }\r\n\r\n\r\n  patchUserInfo = (targetKeys) => {\r\n    this.setState({\r\n        targetKeys: targetKeys\r\n    });\r\n  }\r\n\r\n  // 用户授权提交\r\n  handleUserSubmit = ()=>{\r\n    let data = {};\r\n    data.user_ids = this.state.targetKeys || [];\r\n    data.role_id = this.state.selectedItem.id;\r\n    axios.ajax({\r\n        url:'/role/user_role_edit',\r\n        data:{\r\n            params:{\r\n                ...data\r\n            }\r\n        }\r\n    }).then((res)=>{\r\n        if(res){\r\n            this.setState({\r\n                isUserVisible:false\r\n            })\r\n            this.requestList();\r\n        }\r\n    })\r\n  }\r\n\r\n  render () {\r\n\r\n    const columns = [\r\n      {\r\n          title: '角色ID',\r\n          dataIndex: 'id'\r\n      }, {\r\n          title: '角色名称',\r\n          dataIndex: 'role_name'\r\n      },{\r\n          title: '创建时间',\r\n          dataIndex: 'create_time',\r\n          render: Utils.formatTime\r\n      }, {\r\n          title: '使用状态',\r\n          dataIndex: 'status',\r\n          render(status){\r\n              if (status == 1) {\r\n                  return \"启用\"\r\n              } else {\r\n                  return \"停用\"\r\n              }\r\n          }\r\n      }, {\r\n          title: '授权时间',\r\n          dataIndex: 'authorize_time',\r\n          render: Utils.formatTime\r\n      }, {\r\n          title: '授权人',\r\n          dataIndex: 'authorize_user_name',\r\n      }\r\n    ]\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n            <Button type=\"primary\" onClick={this.handleRole}>创建角色</Button>\r\n            <Button type=\"primary\" onClick={this.handlePermission}>设置权限</Button>\r\n            <Button type=\"primary\" onClick={this.handleUserAuth}>用户授权</Button>\r\n        </Card>           \r\n        <div className=\"content-wrap\">\r\n            <ETable\r\n                updateSelectedItem={Utils.updateSelectedItem.bind(this)}\r\n                selectedRowKeys={this.state.selectedRowKeys}\r\n                dataSource={this.state.list}\r\n                columns={columns}\r\n            />\r\n        </div>\r\n        <Modal\r\n          title=\"创建角色\"\r\n          visible={this.state.isRoleVisible}\r\n          onOk={this.handleRoleSubmit}\r\n          onCancel={()=>{\r\n              this.roleForm.props.form.resetFields();\r\n              this.setState({\r\n                  isRoleVisible:false\r\n              })\r\n          }}\r\n        >\r\n          <RoleForm wrappedComponentRef={(inst) => this.roleForm = inst }/>\r\n        </Modal>\r\n        <Modal\r\n          title=\"权限设置\"\r\n          visible={this.state.isPermVisible}\r\n          width={600}\r\n          onOk={this.handlePermEditSubmit}\r\n          onCancel={()=>{\r\n              this.setState({\r\n                  isPermVisible:false\r\n              })\r\n          }}\r\n        >\r\n          <PermEditForm\r\n              wrappedComponentRef={(inst) => this.roleForm = inst }\r\n              detailInfo={this.state.detailInfo}\r\n              menuInfo={this.state.menuInfo||[]}\r\n              patchMenuInfo={(checkedKeys)=>{\r\n                  this.setState({\r\n                      menuInfo: checkedKeys\r\n                  });\r\n              }}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"用户授权\"\r\n          visible={this.state.isUserVisible}\r\n          width={800}\r\n          onOk={this.handleUserSubmit}\r\n          onCancel={()=>{\r\n              this.setState({\r\n                  isUserVisible:false\r\n              })\r\n          }}\r\n        >\r\n          <RoleAuthForm\r\n              wrappedComponentRef={(inst) => this.userAuthForm = inst }\r\n              isClosed={this.state.isAuthClosed}\r\n              detailInfo={this.state.detailInfo}\r\n              targetKeys={this.state.targetKeys}\r\n              mockData={this.state.mockData}\r\n              patchUserInfo={this.patchUserInfo}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n// 角色创建\r\nclass RoleForm extends Component {\r\n  \r\n  render () {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n        labelCol: {span: 5},\r\n        wrapperCol: {span: 16}\r\n    };\r\n    return (\r\n      <Form layout=\"horizontal\">\r\n          <FormItem label=\"角色名称\" {...formItemLayout}>\r\n              {\r\n                  getFieldDecorator('role_name',{\r\n                      initialValue:''\r\n                  })(\r\n                      <Input type=\"text\" placeholder=\"请输入角色名称\"/>\r\n                  )\r\n              }\r\n          </FormItem>\r\n          <FormItem label=\"状态\" {...formItemLayout}>\r\n              {\r\n                  getFieldDecorator('state',{\r\n                      initialValue:1\r\n                  })(\r\n                  <Select>\r\n                      <Option value={1}>开启</Option>\r\n                      <Option value={0}>关闭</Option>\r\n                  </Select>\r\n              )}\r\n          </FormItem>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\nRoleForm = Form.create({})(RoleForm)\r\n\r\n\r\n// 设置权限\r\nclass PermEditForm extends Component {\r\n    state = {};\r\n    // 设置选中的节点，通过父组件方法再传递回来\r\n    onCheck = (checkedKeys) => {\r\n        this.props.patchMenuInfo(checkedKeys);\r\n    };\r\n    renderTreeNodes = (data,key='') => {\r\n        return data.map((item) => {\r\n            let parentKey = key+item.key;\r\n            if (item.children) {\r\n                return (\r\n                    <TreeNode title={item.title} key={parentKey} dataRef={item} className=\"op-role-tree\">\r\n                        {this.renderTreeNodes(item.children,parentKey)}\r\n                    </TreeNode>\r\n                );\r\n            } else if (item.btnList) {\r\n                return (\r\n                    <TreeNode title={item.title} key={parentKey} dataRef={item} className=\"op-role-tree\">\r\n                        { this.renderBtnTreedNode(item,parentKey) }\r\n                    </TreeNode>\r\n                );\r\n            }\r\n            return <TreeNode {...item} />;\r\n        });\r\n    };\r\n\r\n    renderBtnTreedNode = (menu,parentKey='')=> {\r\n        const btnTreeNode = []\r\n        menu.btnList.forEach((item)=> {\r\n            console.log(parentKey+'-btn-'+item.key);\r\n            btnTreeNode.push(<TreeNode title={item.title} key={parentKey+'-btn-'+item.key} className=\"op-role-tree\"/>);\r\n        })\r\n        return btnTreeNode;\r\n    }\r\n\r\n    render () {\r\n      const { getFieldDecorator } = this.props.form;\r\n      const formItemLayout = {\r\n          labelCol: {span: 5},\r\n          wrapperCol: {span: 18}\r\n      };\r\n      const detail_info = this.props.detailInfo;\r\n      const menuInfo = this.props.menuInfo;\r\n      return (\r\n        <Form layout=\"horizontal\">\r\n            <FormItem label=\"角色名称：\" {...formItemLayout}>\r\n                <Input disabled maxLength=\"8\" placeholder={detail_info.role_name}/>\r\n            </FormItem>\r\n            <FormItem label=\"状态：\" {...formItemLayout}>\r\n                {getFieldDecorator('status',{\r\n                    initialValue: '1'\r\n                })(\r\n                    <Select style={{ width: 80}}\r\n                            placeholder=\"启用\"\r\n                    >\r\n                        <Option value=\"1\">启用</Option>\r\n                        <Option value=\"0\">停用</Option>\r\n                    </Select>\r\n                )}\r\n            </FormItem>\r\n            <Tree\r\n                checkable\r\n                defaultExpandAll\r\n                onCheck={(checkedKeys)=>this.onCheck(checkedKeys)}\r\n                checkedKeys={menuInfo ||[]}\r\n            >\r\n                <TreeNode title=\"平台权限\" key=\"platform_all\">\r\n                    {this.renderTreeNodes(menuConfig)}\r\n                </TreeNode>\r\n            </Tree>\r\n        </Form>\r\n      )\r\n    }\r\n}\r\nPermEditForm = Form.create({})(PermEditForm)\r\n\r\n\r\n// 用户授权\r\nclass RoleAuthForm extends Component {\r\n  filterOption = (inputValue, option) => {\r\n    return option.title.indexOf(inputValue) > -1;\r\n  };\r\n  handleChange = (targetKeys) => {\r\n      this.props.patchUserInfo(targetKeys);\r\n  };\r\n\r\n  render () {\r\n    const formItemLayout = {\r\n      labelCol: {span: 5},\r\n      wrapperCol: {span: 18}\r\n    };\r\n    const detail_info = this.props.detailInfo;\r\n    return (\r\n      <Form layout=\"horizontal\">\r\n          <FormItem label=\"角色名称：\" {...formItemLayout}>\r\n              <Input disabled maxLength={8} placeholder={detail_info.role_name}/>\r\n          </FormItem>\r\n          <FormItem label=\"选择用户：\" {...formItemLayout}>\r\n              <Transfer\r\n                  listStyle={{width: 200,height: 400}}\r\n                  dataSource={this.props.mockData}\r\n                  showSearch\r\n                  titles={['待选用户', '已选用户']}\r\n                  searchPlaceholder='输入用户名'\r\n                  filterOption={this.filterOption}\r\n                  targetKeys={this.props.targetKeys}\r\n                  onChange={this.handleChange}\r\n                  render={item => item.title}\r\n              />\r\n          </FormItem>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nRoleAuthForm = Form.create({})(RoleAuthForm)","E:\\LeadingCode\\reactProject\\react-car-manager\\src\\redux\\store\\configureStore.js",["305","306"],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\redux\\reducer\\index.js",["307"],"E:\\LeadingCode\\reactProject\\react-car-manager\\src\\redux\\action\\index.js",[],{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","severity":1,"message":"313","line":6,"column":8,"nodeType":"314","messageId":"315","endLine":6,"endColumn":12},{"ruleId":"316","severity":1,"message":"317","line":26,"column":23,"nodeType":"318","messageId":"319","endLine":26,"endColumn":25},{"ruleId":"312","severity":1,"message":"320","line":27,"column":17,"nodeType":"314","messageId":"315","endLine":27,"endColumn":21},{"ruleId":"312","severity":1,"message":"321","line":2,"column":16,"nodeType":"314","messageId":"315","endLine":2,"endColumn":20},{"ruleId":"322","severity":1,"message":"323","line":4,"column":1,"nodeType":"324","endLine":83,"endColumn":2},{"ruleId":"325","severity":1,"message":"326","line":59,"column":24,"nodeType":"327","messageId":"328","endLine":59,"endColumn":26},{"ruleId":"316","severity":1,"message":"317","line":10,"column":37,"nodeType":"318","messageId":"319","endLine":10,"endColumn":39},{"ruleId":"316","severity":1,"message":"317","line":38,"column":37,"nodeType":"318","messageId":"319","endLine":38,"endColumn":39},{"ruleId":"316","severity":1,"message":"317","line":40,"column":34,"nodeType":"318","messageId":"319","endLine":40,"endColumn":36},{"ruleId":"312","severity":1,"message":"329","line":2,"column":24,"nodeType":"314","messageId":"315","endLine":2,"endColumn":29},{"ruleId":"312","severity":1,"message":"330","line":2,"column":16,"nodeType":"314","messageId":"315","endLine":2,"endColumn":22},{"ruleId":"312","severity":1,"message":"321","line":2,"column":30,"nodeType":"314","messageId":"315","endLine":2,"endColumn":34},{"ruleId":"312","severity":1,"message":"329","line":2,"column":24,"nodeType":"314","messageId":"315","endLine":2,"endColumn":29},{"ruleId":"312","severity":1,"message":"330","line":2,"column":16,"nodeType":"314","messageId":"315","endLine":2,"endColumn":22},{"ruleId":"312","severity":1,"message":"321","line":2,"column":30,"nodeType":"314","messageId":"315","endLine":2,"endColumn":34},{"ruleId":"312","severity":1,"message":"331","line":3,"column":10,"nodeType":"314","messageId":"315","endLine":3,"endColumn":25},{"ruleId":"312","severity":1,"message":"330","line":2,"column":16,"nodeType":"314","messageId":"315","endLine":2,"endColumn":22},{"ruleId":"325","severity":1,"message":"326","line":26,"column":56,"nodeType":"327","messageId":"328","endLine":26,"endColumn":58},{"ruleId":"332","severity":1,"message":"333","line":29,"column":16,"nodeType":"334","endLine":29,"endColumn":82},{"ruleId":"312","severity":1,"message":"335","line":1,"column":28,"nodeType":"314","messageId":"315","endLine":1,"endColumn":35},{"ruleId":"312","severity":1,"message":"336","line":2,"column":37,"nodeType":"314","messageId":"315","endLine":2,"endColumn":44},{"ruleId":"312","severity":1,"message":"321","line":2,"column":46,"nodeType":"314","messageId":"315","endLine":2,"endColumn":50},{"ruleId":"337","severity":1,"message":"338","line":65,"column":15,"nodeType":"334","endLine":65,"endColumn":51},{"ruleId":"312","severity":1,"message":"330","line":2,"column":19,"nodeType":"314","messageId":"315","endLine":2,"endColumn":25},{"ruleId":"312","severity":1,"message":"339","line":2,"column":32,"nodeType":"314","messageId":"315","endLine":2,"endColumn":40},{"ruleId":"312","severity":1,"message":"340","line":2,"column":54,"nodeType":"314","messageId":"315","endLine":2,"endColumn":60},{"ruleId":"312","severity":1,"message":"341","line":2,"column":61,"nodeType":"314","messageId":"315","endLine":2,"endColumn":71},{"ruleId":"312","severity":1,"message":"342","line":2,"column":72,"nodeType":"314","messageId":"315","endLine":2,"endColumn":82},{"ruleId":"312","severity":1,"message":"343","line":2,"column":83,"nodeType":"314","messageId":"315","endLine":2,"endColumn":89},{"ruleId":"312","severity":1,"message":"321","line":2,"column":90,"nodeType":"314","messageId":"315","endLine":2,"endColumn":94},{"ruleId":"312","severity":1,"message":"336","line":2,"column":95,"nodeType":"314","messageId":"315","endLine":2,"endColumn":102},{"ruleId":"312","severity":1,"message":"344","line":2,"column":104,"nodeType":"314","messageId":"315","endLine":2,"endColumn":115},{"ruleId":"312","severity":1,"message":"345","line":7,"column":7,"nodeType":"314","messageId":"315","endLine":7,"endColumn":13},{"ruleId":"312","severity":1,"message":"346","line":8,"column":7,"nodeType":"314","messageId":"315","endLine":8,"endColumn":15},{"ruleId":"312","severity":1,"message":"347","line":24,"column":11,"nodeType":"314","messageId":"315","endLine":24,"endColumn":23},{"ruleId":"312","severity":1,"message":"348","line":33,"column":11,"nodeType":"314","messageId":"315","endLine":33,"endColumn":20},{"ruleId":"325","severity":1,"message":"326","line":49,"column":27,"nodeType":"327","messageId":"328","endLine":49,"endColumn":29},{"ruleId":"325","severity":1,"message":"326","line":69,"column":43,"nodeType":"327","messageId":"328","endLine":69,"endColumn":45},{"ruleId":"325","severity":1,"message":"326","line":100,"column":22,"nodeType":"327","messageId":"328","endLine":100,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":132,"column":26,"nodeType":"318","messageId":"319","endLine":132,"endColumn":28},{"ruleId":"312","severity":1,"message":"349","line":4,"column":8,"nodeType":"314","messageId":"315","endLine":4,"endColumn":13},{"ruleId":"312","severity":1,"message":"350","line":20,"column":9,"nodeType":"314","messageId":"315","endLine":20,"endColumn":14},{"ruleId":"316","severity":1,"message":"317","line":29,"column":22,"nodeType":"318","messageId":"319","endLine":29,"endColumn":24},{"ruleId":"325","severity":1,"message":"326","line":30,"column":47,"nodeType":"327","messageId":"328","endLine":30,"endColumn":49},{"ruleId":"312","severity":1,"message":"351","line":47,"column":9,"nodeType":"314","messageId":"315","endLine":47,"endColumn":11},{"ruleId":"316","severity":1,"message":"317","line":82,"column":26,"nodeType":"318","messageId":"319","endLine":82,"endColumn":28},{"ruleId":"316","severity":1,"message":"317","line":161,"column":26,"nodeType":"318","messageId":"319","endLine":161,"endColumn":28},{"ruleId":"316","severity":1,"message":"317","line":318,"column":26,"nodeType":"318","messageId":"319","endLine":318,"endColumn":28},{"ruleId":"316","severity":1,"message":"317","line":393,"column":26,"nodeType":"318","messageId":"319","endLine":393,"endColumn":28},{"ruleId":"316","severity":1,"message":"317","line":65,"column":21,"nodeType":"318","messageId":"319","endLine":65,"endColumn":23},{"ruleId":"316","severity":1,"message":"317","line":87,"column":27,"nodeType":"318","messageId":"319","endLine":87,"endColumn":29},{"ruleId":"316","severity":1,"message":"317","line":93,"column":30,"nodeType":"318","messageId":"319","endLine":93,"endColumn":32},{"ruleId":"312","severity":1,"message":"341","line":2,"column":52,"nodeType":"314","messageId":"315","endLine":2,"endColumn":62},{"ruleId":"312","severity":1,"message":"345","line":7,"column":7,"nodeType":"314","messageId":"315","endLine":7,"endColumn":13},{"ruleId":"316","severity":1,"message":"317","line":93,"column":21,"nodeType":"318","messageId":"319","endLine":93,"endColumn":23},{"ruleId":"316","severity":1,"message":"317","line":114,"column":22,"nodeType":"318","messageId":"319","endLine":114,"endColumn":24},{"ruleId":"312","severity":1,"message":"329","line":2,"column":49,"nodeType":"314","messageId":"315","endLine":2,"endColumn":54},{"ruleId":"312","severity":1,"message":"345","line":5,"column":7,"nodeType":"314","messageId":"315","endLine":5,"endColumn":13},{"ruleId":"316","severity":1,"message":"317","line":29,"column":27,"nodeType":"318","messageId":"319","endLine":29,"endColumn":29},{"ruleId":"316","severity":1,"message":"317","line":46,"column":32,"nodeType":"318","messageId":"319","endLine":46,"endColumn":34},{"ruleId":"316","severity":1,"message":"317","line":57,"column":34,"nodeType":"318","messageId":"319","endLine":57,"endColumn":36},{"ruleId":"316","severity":1,"message":"317","line":73,"column":34,"nodeType":"318","messageId":"319","endLine":73,"endColumn":36},{"ruleId":"312","severity":1,"message":"352","line":2,"column":15,"nodeType":"314","messageId":"315","endLine":2,"endColumn":18},{"ruleId":"316","severity":1,"message":"317","line":26,"column":21,"nodeType":"318","messageId":"319","endLine":26,"endColumn":23},{"ruleId":"312","severity":1,"message":"353","line":56,"column":9,"nodeType":"314","messageId":"315","endLine":56,"endColumn":12},{"ruleId":"316","severity":1,"message":"317","line":127,"column":69,"nodeType":"318","messageId":"319","endLine":127,"endColumn":71},{"ruleId":"312","severity":1,"message":"354","line":2,"column":24,"nodeType":"314","messageId":"315","endLine":2,"endColumn":29},{"ruleId":"312","severity":1,"message":"339","line":2,"column":44,"nodeType":"314","messageId":"315","endLine":2,"endColumn":52},{"ruleId":"312","severity":1,"message":"321","line":2,"column":67,"nodeType":"314","messageId":"315","endLine":2,"endColumn":71},{"ruleId":"312","severity":1,"message":"336","line":2,"column":73,"nodeType":"314","messageId":"315","endLine":2,"endColumn":80},{"ruleId":"316","severity":1,"message":"317","line":51,"column":13,"nodeType":"318","messageId":"319","endLine":51,"endColumn":15},{"ruleId":"316","severity":1,"message":"317","line":57,"column":18,"nodeType":"318","messageId":"319","endLine":57,"endColumn":20},{"ruleId":"316","severity":1,"message":"317","line":57,"column":34,"nodeType":"318","messageId":"319","endLine":57,"endColumn":36},{"ruleId":"316","severity":1,"message":"317","line":66,"column":23,"nodeType":"318","messageId":"319","endLine":66,"endColumn":25},{"ruleId":"316","severity":1,"message":"317","line":71,"column":18,"nodeType":"318","messageId":"319","endLine":71,"endColumn":20},{"ruleId":"316","severity":1,"message":"317","line":90,"column":33,"nodeType":"318","messageId":"319","endLine":90,"endColumn":35},{"ruleId":"312","severity":1,"message":"355","line":103,"column":9,"nodeType":"314","messageId":"315","endLine":103,"endColumn":13},{"ruleId":"316","severity":1,"message":"317","line":134,"column":22,"nodeType":"318","messageId":"319","endLine":134,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":259,"column":29,"nodeType":"318","messageId":"319","endLine":259,"endColumn":31},{"ruleId":"316","severity":1,"message":"317","line":269,"column":29,"nodeType":"318","messageId":"319","endLine":269,"endColumn":31},{"ruleId":"316","severity":1,"message":"317","line":269,"column":52,"nodeType":"318","messageId":"319","endLine":269,"endColumn":54},{"ruleId":"316","severity":1,"message":"317","line":281,"column":29,"nodeType":"318","messageId":"319","endLine":281,"endColumn":31},{"ruleId":"316","severity":1,"message":"317","line":296,"column":29,"nodeType":"318","messageId":"319","endLine":296,"endColumn":31},{"ruleId":"316","severity":1,"message":"317","line":305,"column":29,"nodeType":"318","messageId":"319","endLine":305,"endColumn":31},{"ruleId":"312","severity":1,"message":"349","line":2,"column":8,"nodeType":"314","messageId":"315","endLine":2,"endColumn":13},{"ruleId":"316","severity":1,"message":"317","line":13,"column":21,"nodeType":"318","messageId":"319","endLine":13,"endColumn":23},{"ruleId":"316","severity":1,"message":"317","line":19,"column":19,"nodeType":"318","messageId":"319","endLine":19,"endColumn":21},{"ruleId":"316","severity":1,"message":"317","line":37,"column":51,"nodeType":"318","messageId":"319","endLine":37,"endColumn":53},{"ruleId":"316","severity":1,"message":"317","line":49,"column":21,"nodeType":"318","messageId":"319","endLine":49,"endColumn":23},{"ruleId":"325","severity":1,"message":"326","line":50,"column":32,"nodeType":"327","messageId":"328","endLine":50,"endColumn":34},{"ruleId":"316","severity":1,"message":"317","line":124,"column":28,"nodeType":"318","messageId":"319","endLine":124,"endColumn":30},{"ruleId":"312","severity":1,"message":"356","line":4,"column":8,"nodeType":"314","messageId":"315","endLine":4,"endColumn":19},{"ruleId":"322","severity":1,"message":"323","line":1,"column":1,"nodeType":"324","endLine":211,"endColumn":2},{"ruleId":"322","severity":1,"message":"323","line":18,"column":1,"nodeType":"324","endLine":199,"endColumn":2},{"ruleId":"312","severity":1,"message":"357","line":43,"column":13,"nodeType":"314","messageId":"315","endLine":43,"endColumn":26},{"ruleId":"316","severity":1,"message":"317","line":26,"column":21,"nodeType":"318","messageId":"319","endLine":26,"endColumn":23},{"ruleId":"316","severity":1,"message":"317","line":152,"column":29,"nodeType":"318","messageId":"319","endLine":152,"endColumn":31},{"ruleId":"316","severity":1,"message":"317","line":207,"column":26,"nodeType":"318","messageId":"319","endLine":207,"endColumn":28},{"ruleId":"312","severity":1,"message":"358","line":2,"column":22,"nodeType":"314","messageId":"315","endLine":2,"endColumn":37},{"ruleId":"312","severity":1,"message":"359","line":6,"column":10,"nodeType":"314","messageId":"315","endLine":6,"endColumn":29},{"ruleId":"312","severity":1,"message":"360","line":5,"column":10,"nodeType":"314","messageId":"315","endLine":5,"endColumn":25},"no-native-reassign",["361"],"no-negated-in-lhs",["362"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'Icon' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Radio' is defined but never used.","'Button' is defined but never used.","'LoadingOutlined' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useForm' is defined but never used.","'message' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Checkbox' is defined but never used.","'Switch' is defined but never used.","'DatePicker' is defined but never used.","'TimePicker' is defined but never used.","'Upload' is defined but never used.","'InputNumber' is defined but never used.","'Option' is assigned a value but never used.","'TextArea' is assigned a value but never used.","'offsetLayout' is assigned a value but never used.","'rowObject' is assigned a value but never used.","'Utils' is defined but never used.","'_this' is assigned a value but never used.","'id' is assigned a value but never used.","'Col' is defined but never used.","'map' is assigned a value but never used.","'Table' is defined but never used.","'type' is assigned a value but never used.","'echartTheme' is defined but never used.","'editorContent' is assigned a value but never used.","'applyMiddleware' is defined but never used.","'composeWithDevTools' is defined but never used.","'combineReducers' is defined but never used.","no-global-assign","no-unsafe-negation"]